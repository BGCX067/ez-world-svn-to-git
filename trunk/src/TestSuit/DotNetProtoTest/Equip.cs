// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace world.equip {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Equip {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_world_equip_EquipMake__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake, global::world.equip.EquipMake.Builder> internal__static_world_equip_EquipMake__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_EquipMake_Adder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake.Types.Adder, global::world.equip.EquipMake.Types.Adder.Builder> internal__static_world_equip_EquipMake_Adder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_EquipMake_PinZhi__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake.Types.PinZhi, global::world.equip.EquipMake.Types.PinZhi.Builder> internal__static_world_equip_EquipMake_PinZhi__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_BuWeiXiShu__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.BuWeiXiShu, global::world.equip.BuWeiXiShu.Builder> internal__static_world_equip_BuWeiXiShu__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_SjsxBiao__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.SjsxBiao, global::world.equip.SjsxBiao.Builder> internal__static_world_equip_SjsxBiao__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_GdsxBiao__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.GdsxBiao, global::world.equip.GdsxBiao.Builder> internal__static_world_equip_GdsxBiao__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_GdsxBiao_Job__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.GdsxBiao.Types.Job, global::world.equip.GdsxBiao.Types.Job.Builder> internal__static_world_equip_GdsxBiao_Job__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_equip_Tables__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.equip.Tables, global::world.equip.Tables.Builder> internal__static_world_equip_Tables__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Equip() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgtlcXVpcC5wcm90bxILd29ybGQuZXF1aXAi0gEKCUVxdWlwTWFrZRItCgZw" + 
          "aW56aGkYASADKAsyHS53b3JsZC5lcXVpcC5FcXVpcE1ha2UuUGluWmhpGl8K" + 
          "BUFkZGVyEg4KBmppYXpoaRgBIAIoBRIOCgZ3dW1pYW4YAiACKAISDgoGbW9t" + 
          "aWFuGAMgAigCEhgKEHBpbmdqdW5zaGFuZ21pYW4YBCACKAISDAoEZGVzYxgF" + 
          "IAIoCRo1CgZQaW5aaGkSKwoFYWRkZXIYASADKAsyHC53b3JsZC5lcXVpcC5F" + 
          "cXVpcE1ha2UuQWRkZXIiNAoKQnVXZWlYaVNodRISCgpidXdlaXhpc2h1GAEg" + 
          "AigFEhIKCnByaWNleGlzaHUYAiACKAIiqgYKCFNqc3hCaWFvEgoKAmlkGAEg" + 
          "AigFEi8KBWNsYXNzGAIgAigOMiAud29ybGQuZXF1aXAuU2pzeEJpYW8uY2xh" + 
          "c3NfRW51bRIPCgdlcXVpcGx2GAMgAigFEhAKCGFkZHZhbHVlGAQgAigFEg4K" + 
          "BnN0cm1pbhgFIAIoBRIOCgZzdHJtYXgYBiACKAUSDgoGZGV4bWluGAcgAigF" + 
          "Eg4KBmRleG1heBgIIAIoBRIOCgZjb25taW4YCSACKAUSDgoGY29ubWF4GAog" + 
          "AigFEhAKCHBvd2VybWluGAsgAigFEhAKCHBvd2VybWF4GAwgAigFEg4KBmlu" + 
          "dG1pbhgNIAIoBRIOCgZpbnRtYXgYDiACKAUSEQoJbWluYXR0bWluGA8gAigF" + 
          "EhEKCW1pbmF0dG1heBgQIAIoBRIRCgltYXhhdHRtaW4YESACKAUSEQoJbWF4" + 
          "YXR0bWF4GBIgAigFEg4KBmRlZm1pbhgTIAIoBRIOCgZkZWZtYXgYFCACKAUS" + 
          "DwoHbWRlZm1pbhgVIAIoBRIPCgdtZGVmbWF4GBYgAigFEg8KB21hdHRtaW4Y" + 
          "FyACKAUSDwoHbWF0dG1heBgYIAIoBRINCgVocG1pbhgZIAIoBRINCgVob21h" + 
          "eBgaIAIoBRINCgVtcG1pbhgbIAIoBRINCgVtcG1heBgcIAIoBRIOCgZoaXRt" + 
          "aW4YHSACKAUSDgoGaGl0bWF4GB4gAigFEhAKCGRvZGdlbWluGB8gAigFEhAK" + 
          "CGRvZGdlbWF4GCAgAigFEhAKCHBoeWNybWluGCEgAigFEhAKCHBoeWNybWF4" + 
          "GCIgAigFEhAKCHNraWNybWluGCMgAigFEhAKCHNraWNybWF4GCQgAigFEg8K" + 
          "B2hwcmVtaW4YJSACKAUSDwoHaHByZW1heBgmIAIoBRIPCgdtcHJlbWluGCcg" + 
          "AigFEg8KB21vcmVtYXgYKCACKAUSDQoFcnBtaW4YKSACKAUSDQoFcnBtYXgY" + 
          "KiACKAUiQAoKY2xhc3NfRW51bRILCgdjbGFzc18wEAASCwoHY2xhc3NfMRAB" + 
          "EgsKB2NsYXNzXzIQAhILCgdjbGFzc18zEAMiTQoIR2RzeEJpYW8SJwoEam9i" + 
          "cxgBIAMoCzIZLndvcmxkLmVxdWlwLkdkc3hCaWFvLkpvYhoYCgNKb2ISEQoJ" + 
          "c2h1eGluZ0lEGAEgAygFIrkBCgZUYWJsZXMSKwoLZXF1aXBfbWFrZXMYASAD" + 
          "KAsyFi53b3JsZC5lcXVpcC5FcXVpcE1ha2USLAoLZXF1aXBfYnV3ZWkYAiAD" + 
          "KAsyFy53b3JsZC5lcXVpcC5CdVdlaVhpU2h1EikKCmVxdWlwX3Nqc3gYAyAD" + 
          "KAsyFS53b3JsZC5lcXVpcC5TanN4QmlhbxIpCgplcXVpcF9nZHhzGAQgAygL" + 
          "MhUud29ybGQuZXF1aXAuR2RzeEJpYW8=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_world_equip_EquipMake__Descriptor = Descriptor.MessageTypes[0];
        internal__static_world_equip_EquipMake__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake, global::world.equip.EquipMake.Builder>(internal__static_world_equip_EquipMake__Descriptor,
                new string[] { "Pinzhi", });
        internal__static_world_equip_EquipMake_Adder__Descriptor = internal__static_world_equip_EquipMake__Descriptor.NestedTypes[0];
        internal__static_world_equip_EquipMake_Adder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake.Types.Adder, global::world.equip.EquipMake.Types.Adder.Builder>(internal__static_world_equip_EquipMake_Adder__Descriptor,
                new string[] { "Jiazhi", "Wumian", "Momian", "Pingjunshangmian", "Desc", });
        internal__static_world_equip_EquipMake_PinZhi__Descriptor = internal__static_world_equip_EquipMake__Descriptor.NestedTypes[1];
        internal__static_world_equip_EquipMake_PinZhi__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.EquipMake.Types.PinZhi, global::world.equip.EquipMake.Types.PinZhi.Builder>(internal__static_world_equip_EquipMake_PinZhi__Descriptor,
                new string[] { "Adder", });
        internal__static_world_equip_BuWeiXiShu__Descriptor = Descriptor.MessageTypes[1];
        internal__static_world_equip_BuWeiXiShu__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.BuWeiXiShu, global::world.equip.BuWeiXiShu.Builder>(internal__static_world_equip_BuWeiXiShu__Descriptor,
                new string[] { "Buweixishu", "Pricexishu", });
        internal__static_world_equip_SjsxBiao__Descriptor = Descriptor.MessageTypes[2];
        internal__static_world_equip_SjsxBiao__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.SjsxBiao, global::world.equip.SjsxBiao.Builder>(internal__static_world_equip_SjsxBiao__Descriptor,
                new string[] { "Id", "Class", "Equiplv", "Addvalue", "Strmin", "Strmax", "Dexmin", "Dexmax", "Conmin", "Conmax", "Powermin", "Powermax", "Intmin", "Intmax", "Minattmin", "Minattmax", "Maxattmin", "Maxattmax", "Defmin", "Defmax", "Mdefmin", "Mdefmax", "Mattmin", "Mattmax", "Hpmin", "Homax", "Mpmin", "Mpmax", "Hitmin", "Hitmax", "Dodgemin", "Dodgemax", "Phycrmin", "Phycrmax", "Skicrmin", "Skicrmax", "Hpremin", "Hpremax", "Mpremin", "Moremax", "Rpmin", "Rpmax", });
        internal__static_world_equip_GdsxBiao__Descriptor = Descriptor.MessageTypes[3];
        internal__static_world_equip_GdsxBiao__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.GdsxBiao, global::world.equip.GdsxBiao.Builder>(internal__static_world_equip_GdsxBiao__Descriptor,
                new string[] { "Jobs", });
        internal__static_world_equip_GdsxBiao_Job__Descriptor = internal__static_world_equip_GdsxBiao__Descriptor.NestedTypes[0];
        internal__static_world_equip_GdsxBiao_Job__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.GdsxBiao.Types.Job, global::world.equip.GdsxBiao.Types.Job.Builder>(internal__static_world_equip_GdsxBiao_Job__Descriptor,
                new string[] { "ShuxingID", });
        internal__static_world_equip_Tables__Descriptor = Descriptor.MessageTypes[4];
        internal__static_world_equip_Tables__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.equip.Tables, global::world.equip.Tables.Builder>(internal__static_world_equip_Tables__Descriptor,
                new string[] { "EquipMakes", "EquipBuwei", "EquipSjsx", "EquipGdxs", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EquipMake : pb::GeneratedMessage<EquipMake, EquipMake.Builder> {
    private EquipMake() { }
    private static readonly EquipMake defaultInstance = new EquipMake().MakeReadOnly();
    private static readonly string[] _equipMakeFieldNames = new string[] { "pinzhi" };
    private static readonly uint[] _equipMakeFieldTags = new uint[] { 10 };
    public static EquipMake DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EquipMake DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EquipMake ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.equip.Equip.internal__static_world_equip_EquipMake__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EquipMake, EquipMake.Builder> InternalFieldAccessors {
      get { return global::world.equip.Equip.internal__static_world_equip_EquipMake__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class Adder : pb::GeneratedMessage<Adder, Adder.Builder> {
        private Adder() { }
        private static readonly Adder defaultInstance = new Adder().MakeReadOnly();
        private static readonly string[] _adderFieldNames = new string[] { "desc", "jiazhi", "momian", "pingjunshangmian", "wumian" };
        private static readonly uint[] _adderFieldTags = new uint[] { 42, 8, 29, 37, 21 };
        public static Adder DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Adder DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Adder ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::world.equip.Equip.internal__static_world_equip_EquipMake_Adder__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Adder, Adder.Builder> InternalFieldAccessors {
          get { return global::world.equip.Equip.internal__static_world_equip_EquipMake_Adder__FieldAccessorTable; }
        }
        
        public const int JiazhiFieldNumber = 1;
        private bool hasJiazhi;
        private int jiazhi_;
        public bool HasJiazhi {
          get { return hasJiazhi; }
        }
        public int Jiazhi {
          get { return jiazhi_; }
        }
        
        public const int WumianFieldNumber = 2;
        private bool hasWumian;
        private float wumian_;
        public bool HasWumian {
          get { return hasWumian; }
        }
        public float Wumian {
          get { return wumian_; }
        }
        
        public const int MomianFieldNumber = 3;
        private bool hasMomian;
        private float momian_;
        public bool HasMomian {
          get { return hasMomian; }
        }
        public float Momian {
          get { return momian_; }
        }
        
        public const int PingjunshangmianFieldNumber = 4;
        private bool hasPingjunshangmian;
        private float pingjunshangmian_;
        public bool HasPingjunshangmian {
          get { return hasPingjunshangmian; }
        }
        public float Pingjunshangmian {
          get { return pingjunshangmian_; }
        }
        
        public const int DescFieldNumber = 5;
        private bool hasDesc;
        private string desc_ = "";
        public bool HasDesc {
          get { return hasDesc; }
        }
        public string Desc {
          get { return desc_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasJiazhi) return false;
            if (!hasWumian) return false;
            if (!hasMomian) return false;
            if (!hasPingjunshangmian) return false;
            if (!hasDesc) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _adderFieldNames;
          if (hasJiazhi) {
            output.WriteInt32(1, field_names[1], Jiazhi);
          }
          if (hasWumian) {
            output.WriteFloat(2, field_names[4], Wumian);
          }
          if (hasMomian) {
            output.WriteFloat(3, field_names[2], Momian);
          }
          if (hasPingjunshangmian) {
            output.WriteFloat(4, field_names[3], Pingjunshangmian);
          }
          if (hasDesc) {
            output.WriteString(5, field_names[0], Desc);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasJiazhi) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, Jiazhi);
            }
            if (hasWumian) {
              size += pb::CodedOutputStream.ComputeFloatSize(2, Wumian);
            }
            if (hasMomian) {
              size += pb::CodedOutputStream.ComputeFloatSize(3, Momian);
            }
            if (hasPingjunshangmian) {
              size += pb::CodedOutputStream.ComputeFloatSize(4, Pingjunshangmian);
            }
            if (hasDesc) {
              size += pb::CodedOutputStream.ComputeStringSize(5, Desc);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static Adder ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Adder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Adder ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Adder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Adder ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Adder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Adder ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Adder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Adder ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Adder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Adder MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Adder prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<Adder, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Adder cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Adder result;
          
          private Adder PrepareBuilder() {
            if (resultIsReadOnly) {
              Adder original = result;
              result = new Adder();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Adder MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::world.equip.EquipMake.Types.Adder.Descriptor; }
          }
          
          public override Adder DefaultInstanceForType {
            get { return global::world.equip.EquipMake.Types.Adder.DefaultInstance; }
          }
          
          public override Adder BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Adder) {
              return MergeFrom((Adder) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Adder other) {
            if (other == global::world.equip.EquipMake.Types.Adder.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasJiazhi) {
              Jiazhi = other.Jiazhi;
            }
            if (other.HasWumian) {
              Wumian = other.Wumian;
            }
            if (other.HasMomian) {
              Momian = other.Momian;
            }
            if (other.HasPingjunshangmian) {
              Pingjunshangmian = other.Pingjunshangmian;
            }
            if (other.HasDesc) {
              Desc = other.Desc;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_adderFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _adderFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasJiazhi = input.ReadInt32(ref result.jiazhi_);
                  break;
                }
                case 21: {
                  result.hasWumian = input.ReadFloat(ref result.wumian_);
                  break;
                }
                case 29: {
                  result.hasMomian = input.ReadFloat(ref result.momian_);
                  break;
                }
                case 37: {
                  result.hasPingjunshangmian = input.ReadFloat(ref result.pingjunshangmian_);
                  break;
                }
                case 42: {
                  result.hasDesc = input.ReadString(ref result.desc_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasJiazhi {
            get { return result.hasJiazhi; }
          }
          public int Jiazhi {
            get { return result.Jiazhi; }
            set { SetJiazhi(value); }
          }
          public Builder SetJiazhi(int value) {
            PrepareBuilder();
            result.hasJiazhi = true;
            result.jiazhi_ = value;
            return this;
          }
          public Builder ClearJiazhi() {
            PrepareBuilder();
            result.hasJiazhi = false;
            result.jiazhi_ = 0;
            return this;
          }
          
          public bool HasWumian {
            get { return result.hasWumian; }
          }
          public float Wumian {
            get { return result.Wumian; }
            set { SetWumian(value); }
          }
          public Builder SetWumian(float value) {
            PrepareBuilder();
            result.hasWumian = true;
            result.wumian_ = value;
            return this;
          }
          public Builder ClearWumian() {
            PrepareBuilder();
            result.hasWumian = false;
            result.wumian_ = 0F;
            return this;
          }
          
          public bool HasMomian {
            get { return result.hasMomian; }
          }
          public float Momian {
            get { return result.Momian; }
            set { SetMomian(value); }
          }
          public Builder SetMomian(float value) {
            PrepareBuilder();
            result.hasMomian = true;
            result.momian_ = value;
            return this;
          }
          public Builder ClearMomian() {
            PrepareBuilder();
            result.hasMomian = false;
            result.momian_ = 0F;
            return this;
          }
          
          public bool HasPingjunshangmian {
            get { return result.hasPingjunshangmian; }
          }
          public float Pingjunshangmian {
            get { return result.Pingjunshangmian; }
            set { SetPingjunshangmian(value); }
          }
          public Builder SetPingjunshangmian(float value) {
            PrepareBuilder();
            result.hasPingjunshangmian = true;
            result.pingjunshangmian_ = value;
            return this;
          }
          public Builder ClearPingjunshangmian() {
            PrepareBuilder();
            result.hasPingjunshangmian = false;
            result.pingjunshangmian_ = 0F;
            return this;
          }
          
          public bool HasDesc {
            get { return result.hasDesc; }
          }
          public string Desc {
            get { return result.Desc; }
            set { SetDesc(value); }
          }
          public Builder SetDesc(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasDesc = true;
            result.desc_ = value;
            return this;
          }
          public Builder ClearDesc() {
            PrepareBuilder();
            result.hasDesc = false;
            result.desc_ = "";
            return this;
          }
        }
        static Adder() {
          object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class PinZhi : pb::GeneratedMessage<PinZhi, PinZhi.Builder> {
        private PinZhi() { }
        private static readonly PinZhi defaultInstance = new PinZhi().MakeReadOnly();
        private static readonly string[] _pinZhiFieldNames = new string[] { "adder" };
        private static readonly uint[] _pinZhiFieldTags = new uint[] { 10 };
        public static PinZhi DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override PinZhi DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override PinZhi ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::world.equip.Equip.internal__static_world_equip_EquipMake_PinZhi__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<PinZhi, PinZhi.Builder> InternalFieldAccessors {
          get { return global::world.equip.Equip.internal__static_world_equip_EquipMake_PinZhi__FieldAccessorTable; }
        }
        
        public const int AdderFieldNumber = 1;
        private pbc::PopsicleList<global::world.equip.EquipMake.Types.Adder> adder_ = new pbc::PopsicleList<global::world.equip.EquipMake.Types.Adder>();
        public scg::IList<global::world.equip.EquipMake.Types.Adder> AdderList {
          get { return adder_; }
        }
        public int AdderCount {
          get { return adder_.Count; }
        }
        public global::world.equip.EquipMake.Types.Adder GetAdder(int index) {
          return adder_[index];
        }
        
        public override bool IsInitialized {
          get {
            foreach (global::world.equip.EquipMake.Types.Adder element in AdderList) {
              if (!element.IsInitialized) return false;
            }
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _pinZhiFieldNames;
          if (adder_.Count > 0) {
            output.WriteMessageArray(1, field_names[0], adder_);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            foreach (global::world.equip.EquipMake.Types.Adder element in AdderList) {
              size += pb::CodedOutputStream.ComputeMessageSize(1, element);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static PinZhi ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static PinZhi ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static PinZhi ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static PinZhi ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static PinZhi ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static PinZhi ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static PinZhi ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static PinZhi ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static PinZhi ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static PinZhi ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private PinZhi MakeReadOnly() {
          adder_.MakeReadOnly();
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(PinZhi prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<PinZhi, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(PinZhi cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private PinZhi result;
          
          private PinZhi PrepareBuilder() {
            if (resultIsReadOnly) {
              PinZhi original = result;
              result = new PinZhi();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override PinZhi MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::world.equip.EquipMake.Types.PinZhi.Descriptor; }
          }
          
          public override PinZhi DefaultInstanceForType {
            get { return global::world.equip.EquipMake.Types.PinZhi.DefaultInstance; }
          }
          
          public override PinZhi BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is PinZhi) {
              return MergeFrom((PinZhi) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(PinZhi other) {
            if (other == global::world.equip.EquipMake.Types.PinZhi.DefaultInstance) return this;
            PrepareBuilder();
            if (other.adder_.Count != 0) {
              result.adder_.Add(other.adder_);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_pinZhiFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _pinZhiFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  input.ReadMessageArray(tag, field_name, result.adder_, global::world.equip.EquipMake.Types.Adder.DefaultInstance, extensionRegistry);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public pbc::IPopsicleList<global::world.equip.EquipMake.Types.Adder> AdderList {
            get { return PrepareBuilder().adder_; }
          }
          public int AdderCount {
            get { return result.AdderCount; }
          }
          public global::world.equip.EquipMake.Types.Adder GetAdder(int index) {
            return result.GetAdder(index);
          }
          public Builder SetAdder(int index, global::world.equip.EquipMake.Types.Adder value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.adder_[index] = value;
            return this;
          }
          public Builder SetAdder(int index, global::world.equip.EquipMake.Types.Adder.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.adder_[index] = builderForValue.Build();
            return this;
          }
          public Builder AddAdder(global::world.equip.EquipMake.Types.Adder value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.adder_.Add(value);
            return this;
          }
          public Builder AddAdder(global::world.equip.EquipMake.Types.Adder.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.adder_.Add(builderForValue.Build());
            return this;
          }
          public Builder AddRangeAdder(scg::IEnumerable<global::world.equip.EquipMake.Types.Adder> values) {
            PrepareBuilder();
            result.adder_.Add(values);
            return this;
          }
          public Builder ClearAdder() {
            PrepareBuilder();
            result.adder_.Clear();
            return this;
          }
        }
        static PinZhi() {
          object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int PinzhiFieldNumber = 1;
    private pbc::PopsicleList<global::world.equip.EquipMake.Types.PinZhi> pinzhi_ = new pbc::PopsicleList<global::world.equip.EquipMake.Types.PinZhi>();
    public scg::IList<global::world.equip.EquipMake.Types.PinZhi> PinzhiList {
      get { return pinzhi_; }
    }
    public int PinzhiCount {
      get { return pinzhi_.Count; }
    }
    public global::world.equip.EquipMake.Types.PinZhi GetPinzhi(int index) {
      return pinzhi_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::world.equip.EquipMake.Types.PinZhi element in PinzhiList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _equipMakeFieldNames;
      if (pinzhi_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], pinzhi_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::world.equip.EquipMake.Types.PinZhi element in PinzhiList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EquipMake ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EquipMake ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EquipMake ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EquipMake ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EquipMake ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EquipMake ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EquipMake ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EquipMake ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EquipMake ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EquipMake ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EquipMake MakeReadOnly() {
      pinzhi_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EquipMake prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EquipMake, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EquipMake cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EquipMake result;
      
      private EquipMake PrepareBuilder() {
        if (resultIsReadOnly) {
          EquipMake original = result;
          result = new EquipMake();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EquipMake MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.equip.EquipMake.Descriptor; }
      }
      
      public override EquipMake DefaultInstanceForType {
        get { return global::world.equip.EquipMake.DefaultInstance; }
      }
      
      public override EquipMake BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EquipMake) {
          return MergeFrom((EquipMake) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EquipMake other) {
        if (other == global::world.equip.EquipMake.DefaultInstance) return this;
        PrepareBuilder();
        if (other.pinzhi_.Count != 0) {
          result.pinzhi_.Add(other.pinzhi_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_equipMakeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _equipMakeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.pinzhi_, global::world.equip.EquipMake.Types.PinZhi.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::world.equip.EquipMake.Types.PinZhi> PinzhiList {
        get { return PrepareBuilder().pinzhi_; }
      }
      public int PinzhiCount {
        get { return result.PinzhiCount; }
      }
      public global::world.equip.EquipMake.Types.PinZhi GetPinzhi(int index) {
        return result.GetPinzhi(index);
      }
      public Builder SetPinzhi(int index, global::world.equip.EquipMake.Types.PinZhi value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pinzhi_[index] = value;
        return this;
      }
      public Builder SetPinzhi(int index, global::world.equip.EquipMake.Types.PinZhi.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pinzhi_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPinzhi(global::world.equip.EquipMake.Types.PinZhi value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pinzhi_.Add(value);
        return this;
      }
      public Builder AddPinzhi(global::world.equip.EquipMake.Types.PinZhi.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pinzhi_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePinzhi(scg::IEnumerable<global::world.equip.EquipMake.Types.PinZhi> values) {
        PrepareBuilder();
        result.pinzhi_.Add(values);
        return this;
      }
      public Builder ClearPinzhi() {
        PrepareBuilder();
        result.pinzhi_.Clear();
        return this;
      }
    }
    static EquipMake() {
      object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BuWeiXiShu : pb::GeneratedMessage<BuWeiXiShu, BuWeiXiShu.Builder> {
    private BuWeiXiShu() { }
    private static readonly BuWeiXiShu defaultInstance = new BuWeiXiShu().MakeReadOnly();
    private static readonly string[] _buWeiXiShuFieldNames = new string[] { "buweixishu", "pricexishu" };
    private static readonly uint[] _buWeiXiShuFieldTags = new uint[] { 8, 21 };
    public static BuWeiXiShu DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BuWeiXiShu DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BuWeiXiShu ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.equip.Equip.internal__static_world_equip_BuWeiXiShu__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BuWeiXiShu, BuWeiXiShu.Builder> InternalFieldAccessors {
      get { return global::world.equip.Equip.internal__static_world_equip_BuWeiXiShu__FieldAccessorTable; }
    }
    
    public const int BuweixishuFieldNumber = 1;
    private bool hasBuweixishu;
    private int buweixishu_;
    public bool HasBuweixishu {
      get { return hasBuweixishu; }
    }
    public int Buweixishu {
      get { return buweixishu_; }
    }
    
    public const int PricexishuFieldNumber = 2;
    private bool hasPricexishu;
    private float pricexishu_;
    public bool HasPricexishu {
      get { return hasPricexishu; }
    }
    public float Pricexishu {
      get { return pricexishu_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBuweixishu) return false;
        if (!hasPricexishu) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _buWeiXiShuFieldNames;
      if (hasBuweixishu) {
        output.WriteInt32(1, field_names[0], Buweixishu);
      }
      if (hasPricexishu) {
        output.WriteFloat(2, field_names[1], Pricexishu);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBuweixishu) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Buweixishu);
        }
        if (hasPricexishu) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Pricexishu);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BuWeiXiShu ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BuWeiXiShu ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BuWeiXiShu ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BuWeiXiShu ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BuWeiXiShu MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BuWeiXiShu prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BuWeiXiShu, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BuWeiXiShu cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BuWeiXiShu result;
      
      private BuWeiXiShu PrepareBuilder() {
        if (resultIsReadOnly) {
          BuWeiXiShu original = result;
          result = new BuWeiXiShu();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BuWeiXiShu MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.equip.BuWeiXiShu.Descriptor; }
      }
      
      public override BuWeiXiShu DefaultInstanceForType {
        get { return global::world.equip.BuWeiXiShu.DefaultInstance; }
      }
      
      public override BuWeiXiShu BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BuWeiXiShu) {
          return MergeFrom((BuWeiXiShu) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BuWeiXiShu other) {
        if (other == global::world.equip.BuWeiXiShu.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBuweixishu) {
          Buweixishu = other.Buweixishu;
        }
        if (other.HasPricexishu) {
          Pricexishu = other.Pricexishu;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_buWeiXiShuFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _buWeiXiShuFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBuweixishu = input.ReadInt32(ref result.buweixishu_);
              break;
            }
            case 21: {
              result.hasPricexishu = input.ReadFloat(ref result.pricexishu_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBuweixishu {
        get { return result.hasBuweixishu; }
      }
      public int Buweixishu {
        get { return result.Buweixishu; }
        set { SetBuweixishu(value); }
      }
      public Builder SetBuweixishu(int value) {
        PrepareBuilder();
        result.hasBuweixishu = true;
        result.buweixishu_ = value;
        return this;
      }
      public Builder ClearBuweixishu() {
        PrepareBuilder();
        result.hasBuweixishu = false;
        result.buweixishu_ = 0;
        return this;
      }
      
      public bool HasPricexishu {
        get { return result.hasPricexishu; }
      }
      public float Pricexishu {
        get { return result.Pricexishu; }
        set { SetPricexishu(value); }
      }
      public Builder SetPricexishu(float value) {
        PrepareBuilder();
        result.hasPricexishu = true;
        result.pricexishu_ = value;
        return this;
      }
      public Builder ClearPricexishu() {
        PrepareBuilder();
        result.hasPricexishu = false;
        result.pricexishu_ = 0F;
        return this;
      }
    }
    static BuWeiXiShu() {
      object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SjsxBiao : pb::GeneratedMessage<SjsxBiao, SjsxBiao.Builder> {
    private SjsxBiao() { }
    private static readonly SjsxBiao defaultInstance = new SjsxBiao().MakeReadOnly();
    private static readonly string[] _sjsxBiaoFieldNames = new string[] { "addvalue", "class", "conmax", "conmin", "defmax", "defmin", "dexmax", "dexmin", "dodgemax", "dodgemin", "equiplv", "hitmax", "hitmin", "homax", "hpmin", "hpremax", "hpremin", "id", "intmax", "intmin", "mattmax", "mattmin", "maxattmax", "maxattmin", "mdefmax", "mdefmin", "minattmax", "minattmin", "moremax", "mpmax", "mpmin", "mpremin", "phycrmax", "phycrmin", "powermax", "powermin", "rpmax", "rpmin", "skicrmax", "skicrmin", "strmax", "strmin" };
    private static readonly uint[] _sjsxBiaoFieldTags = new uint[] { 32, 16, 80, 72, 160, 152, 64, 56, 256, 248, 24, 240, 232, 208, 200, 304, 296, 8, 112, 104, 192, 184, 144, 136, 176, 168, 128, 120, 320, 224, 216, 312, 272, 264, 96, 88, 336, 328, 288, 280, 48, 40 };
    public static SjsxBiao DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SjsxBiao DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SjsxBiao ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.equip.Equip.internal__static_world_equip_SjsxBiao__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SjsxBiao, SjsxBiao.Builder> InternalFieldAccessors {
      get { return global::world.equip.Equip.internal__static_world_equip_SjsxBiao__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum class_Enum {
        class_0 = 0,
        class_1 = 1,
        class_2 = 2,
        class_3 = 3,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int ClassFieldNumber = 2;
    private bool hasClass;
    private global::world.equip.SjsxBiao.Types.class_Enum class_ = global::world.equip.SjsxBiao.Types.class_Enum.class_0;
    public bool HasClass {
      get { return hasClass; }
    }
    public global::world.equip.SjsxBiao.Types.class_Enum Class {
      get { return class_; }
    }
    
    public const int EquiplvFieldNumber = 3;
    private bool hasEquiplv;
    private int equiplv_;
    public bool HasEquiplv {
      get { return hasEquiplv; }
    }
    public int Equiplv {
      get { return equiplv_; }
    }
    
    public const int AddvalueFieldNumber = 4;
    private bool hasAddvalue;
    private int addvalue_;
    public bool HasAddvalue {
      get { return hasAddvalue; }
    }
    public int Addvalue {
      get { return addvalue_; }
    }
    
    public const int StrminFieldNumber = 5;
    private bool hasStrmin;
    private int strmin_;
    public bool HasStrmin {
      get { return hasStrmin; }
    }
    public int Strmin {
      get { return strmin_; }
    }
    
    public const int StrmaxFieldNumber = 6;
    private bool hasStrmax;
    private int strmax_;
    public bool HasStrmax {
      get { return hasStrmax; }
    }
    public int Strmax {
      get { return strmax_; }
    }
    
    public const int DexminFieldNumber = 7;
    private bool hasDexmin;
    private int dexmin_;
    public bool HasDexmin {
      get { return hasDexmin; }
    }
    public int Dexmin {
      get { return dexmin_; }
    }
    
    public const int DexmaxFieldNumber = 8;
    private bool hasDexmax;
    private int dexmax_;
    public bool HasDexmax {
      get { return hasDexmax; }
    }
    public int Dexmax {
      get { return dexmax_; }
    }
    
    public const int ConminFieldNumber = 9;
    private bool hasConmin;
    private int conmin_;
    public bool HasConmin {
      get { return hasConmin; }
    }
    public int Conmin {
      get { return conmin_; }
    }
    
    public const int ConmaxFieldNumber = 10;
    private bool hasConmax;
    private int conmax_;
    public bool HasConmax {
      get { return hasConmax; }
    }
    public int Conmax {
      get { return conmax_; }
    }
    
    public const int PowerminFieldNumber = 11;
    private bool hasPowermin;
    private int powermin_;
    public bool HasPowermin {
      get { return hasPowermin; }
    }
    public int Powermin {
      get { return powermin_; }
    }
    
    public const int PowermaxFieldNumber = 12;
    private bool hasPowermax;
    private int powermax_;
    public bool HasPowermax {
      get { return hasPowermax; }
    }
    public int Powermax {
      get { return powermax_; }
    }
    
    public const int IntminFieldNumber = 13;
    private bool hasIntmin;
    private int intmin_;
    public bool HasIntmin {
      get { return hasIntmin; }
    }
    public int Intmin {
      get { return intmin_; }
    }
    
    public const int IntmaxFieldNumber = 14;
    private bool hasIntmax;
    private int intmax_;
    public bool HasIntmax {
      get { return hasIntmax; }
    }
    public int Intmax {
      get { return intmax_; }
    }
    
    public const int MinattminFieldNumber = 15;
    private bool hasMinattmin;
    private int minattmin_;
    public bool HasMinattmin {
      get { return hasMinattmin; }
    }
    public int Minattmin {
      get { return minattmin_; }
    }
    
    public const int MinattmaxFieldNumber = 16;
    private bool hasMinattmax;
    private int minattmax_;
    public bool HasMinattmax {
      get { return hasMinattmax; }
    }
    public int Minattmax {
      get { return minattmax_; }
    }
    
    public const int MaxattminFieldNumber = 17;
    private bool hasMaxattmin;
    private int maxattmin_;
    public bool HasMaxattmin {
      get { return hasMaxattmin; }
    }
    public int Maxattmin {
      get { return maxattmin_; }
    }
    
    public const int MaxattmaxFieldNumber = 18;
    private bool hasMaxattmax;
    private int maxattmax_;
    public bool HasMaxattmax {
      get { return hasMaxattmax; }
    }
    public int Maxattmax {
      get { return maxattmax_; }
    }
    
    public const int DefminFieldNumber = 19;
    private bool hasDefmin;
    private int defmin_;
    public bool HasDefmin {
      get { return hasDefmin; }
    }
    public int Defmin {
      get { return defmin_; }
    }
    
    public const int DefmaxFieldNumber = 20;
    private bool hasDefmax;
    private int defmax_;
    public bool HasDefmax {
      get { return hasDefmax; }
    }
    public int Defmax {
      get { return defmax_; }
    }
    
    public const int MdefminFieldNumber = 21;
    private bool hasMdefmin;
    private int mdefmin_;
    public bool HasMdefmin {
      get { return hasMdefmin; }
    }
    public int Mdefmin {
      get { return mdefmin_; }
    }
    
    public const int MdefmaxFieldNumber = 22;
    private bool hasMdefmax;
    private int mdefmax_;
    public bool HasMdefmax {
      get { return hasMdefmax; }
    }
    public int Mdefmax {
      get { return mdefmax_; }
    }
    
    public const int MattminFieldNumber = 23;
    private bool hasMattmin;
    private int mattmin_;
    public bool HasMattmin {
      get { return hasMattmin; }
    }
    public int Mattmin {
      get { return mattmin_; }
    }
    
    public const int MattmaxFieldNumber = 24;
    private bool hasMattmax;
    private int mattmax_;
    public bool HasMattmax {
      get { return hasMattmax; }
    }
    public int Mattmax {
      get { return mattmax_; }
    }
    
    public const int HpminFieldNumber = 25;
    private bool hasHpmin;
    private int hpmin_;
    public bool HasHpmin {
      get { return hasHpmin; }
    }
    public int Hpmin {
      get { return hpmin_; }
    }
    
    public const int HomaxFieldNumber = 26;
    private bool hasHomax;
    private int homax_;
    public bool HasHomax {
      get { return hasHomax; }
    }
    public int Homax {
      get { return homax_; }
    }
    
    public const int MpminFieldNumber = 27;
    private bool hasMpmin;
    private int mpmin_;
    public bool HasMpmin {
      get { return hasMpmin; }
    }
    public int Mpmin {
      get { return mpmin_; }
    }
    
    public const int MpmaxFieldNumber = 28;
    private bool hasMpmax;
    private int mpmax_;
    public bool HasMpmax {
      get { return hasMpmax; }
    }
    public int Mpmax {
      get { return mpmax_; }
    }
    
    public const int HitminFieldNumber = 29;
    private bool hasHitmin;
    private int hitmin_;
    public bool HasHitmin {
      get { return hasHitmin; }
    }
    public int Hitmin {
      get { return hitmin_; }
    }
    
    public const int HitmaxFieldNumber = 30;
    private bool hasHitmax;
    private int hitmax_;
    public bool HasHitmax {
      get { return hasHitmax; }
    }
    public int Hitmax {
      get { return hitmax_; }
    }
    
    public const int DodgeminFieldNumber = 31;
    private bool hasDodgemin;
    private int dodgemin_;
    public bool HasDodgemin {
      get { return hasDodgemin; }
    }
    public int Dodgemin {
      get { return dodgemin_; }
    }
    
    public const int DodgemaxFieldNumber = 32;
    private bool hasDodgemax;
    private int dodgemax_;
    public bool HasDodgemax {
      get { return hasDodgemax; }
    }
    public int Dodgemax {
      get { return dodgemax_; }
    }
    
    public const int PhycrminFieldNumber = 33;
    private bool hasPhycrmin;
    private int phycrmin_;
    public bool HasPhycrmin {
      get { return hasPhycrmin; }
    }
    public int Phycrmin {
      get { return phycrmin_; }
    }
    
    public const int PhycrmaxFieldNumber = 34;
    private bool hasPhycrmax;
    private int phycrmax_;
    public bool HasPhycrmax {
      get { return hasPhycrmax; }
    }
    public int Phycrmax {
      get { return phycrmax_; }
    }
    
    public const int SkicrminFieldNumber = 35;
    private bool hasSkicrmin;
    private int skicrmin_;
    public bool HasSkicrmin {
      get { return hasSkicrmin; }
    }
    public int Skicrmin {
      get { return skicrmin_; }
    }
    
    public const int SkicrmaxFieldNumber = 36;
    private bool hasSkicrmax;
    private int skicrmax_;
    public bool HasSkicrmax {
      get { return hasSkicrmax; }
    }
    public int Skicrmax {
      get { return skicrmax_; }
    }
    
    public const int HpreminFieldNumber = 37;
    private bool hasHpremin;
    private int hpremin_;
    public bool HasHpremin {
      get { return hasHpremin; }
    }
    public int Hpremin {
      get { return hpremin_; }
    }
    
    public const int HpremaxFieldNumber = 38;
    private bool hasHpremax;
    private int hpremax_;
    public bool HasHpremax {
      get { return hasHpremax; }
    }
    public int Hpremax {
      get { return hpremax_; }
    }
    
    public const int MpreminFieldNumber = 39;
    private bool hasMpremin;
    private int mpremin_;
    public bool HasMpremin {
      get { return hasMpremin; }
    }
    public int Mpremin {
      get { return mpremin_; }
    }
    
    public const int MoremaxFieldNumber = 40;
    private bool hasMoremax;
    private int moremax_;
    public bool HasMoremax {
      get { return hasMoremax; }
    }
    public int Moremax {
      get { return moremax_; }
    }
    
    public const int RpminFieldNumber = 41;
    private bool hasRpmin;
    private int rpmin_;
    public bool HasRpmin {
      get { return hasRpmin; }
    }
    public int Rpmin {
      get { return rpmin_; }
    }
    
    public const int RpmaxFieldNumber = 42;
    private bool hasRpmax;
    private int rpmax_;
    public bool HasRpmax {
      get { return hasRpmax; }
    }
    public int Rpmax {
      get { return rpmax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasClass) return false;
        if (!hasEquiplv) return false;
        if (!hasAddvalue) return false;
        if (!hasStrmin) return false;
        if (!hasStrmax) return false;
        if (!hasDexmin) return false;
        if (!hasDexmax) return false;
        if (!hasConmin) return false;
        if (!hasConmax) return false;
        if (!hasPowermin) return false;
        if (!hasPowermax) return false;
        if (!hasIntmin) return false;
        if (!hasIntmax) return false;
        if (!hasMinattmin) return false;
        if (!hasMinattmax) return false;
        if (!hasMaxattmin) return false;
        if (!hasMaxattmax) return false;
        if (!hasDefmin) return false;
        if (!hasDefmax) return false;
        if (!hasMdefmin) return false;
        if (!hasMdefmax) return false;
        if (!hasMattmin) return false;
        if (!hasMattmax) return false;
        if (!hasHpmin) return false;
        if (!hasHomax) return false;
        if (!hasMpmin) return false;
        if (!hasMpmax) return false;
        if (!hasHitmin) return false;
        if (!hasHitmax) return false;
        if (!hasDodgemin) return false;
        if (!hasDodgemax) return false;
        if (!hasPhycrmin) return false;
        if (!hasPhycrmax) return false;
        if (!hasSkicrmin) return false;
        if (!hasSkicrmax) return false;
        if (!hasHpremin) return false;
        if (!hasHpremax) return false;
        if (!hasMpremin) return false;
        if (!hasMoremax) return false;
        if (!hasRpmin) return false;
        if (!hasRpmax) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sjsxBiaoFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[17], Id);
      }
      if (hasClass) {
        output.WriteEnum(2, field_names[1], (int) Class, Class);
      }
      if (hasEquiplv) {
        output.WriteInt32(3, field_names[10], Equiplv);
      }
      if (hasAddvalue) {
        output.WriteInt32(4, field_names[0], Addvalue);
      }
      if (hasStrmin) {
        output.WriteInt32(5, field_names[41], Strmin);
      }
      if (hasStrmax) {
        output.WriteInt32(6, field_names[40], Strmax);
      }
      if (hasDexmin) {
        output.WriteInt32(7, field_names[7], Dexmin);
      }
      if (hasDexmax) {
        output.WriteInt32(8, field_names[6], Dexmax);
      }
      if (hasConmin) {
        output.WriteInt32(9, field_names[3], Conmin);
      }
      if (hasConmax) {
        output.WriteInt32(10, field_names[2], Conmax);
      }
      if (hasPowermin) {
        output.WriteInt32(11, field_names[35], Powermin);
      }
      if (hasPowermax) {
        output.WriteInt32(12, field_names[34], Powermax);
      }
      if (hasIntmin) {
        output.WriteInt32(13, field_names[19], Intmin);
      }
      if (hasIntmax) {
        output.WriteInt32(14, field_names[18], Intmax);
      }
      if (hasMinattmin) {
        output.WriteInt32(15, field_names[27], Minattmin);
      }
      if (hasMinattmax) {
        output.WriteInt32(16, field_names[26], Minattmax);
      }
      if (hasMaxattmin) {
        output.WriteInt32(17, field_names[23], Maxattmin);
      }
      if (hasMaxattmax) {
        output.WriteInt32(18, field_names[22], Maxattmax);
      }
      if (hasDefmin) {
        output.WriteInt32(19, field_names[5], Defmin);
      }
      if (hasDefmax) {
        output.WriteInt32(20, field_names[4], Defmax);
      }
      if (hasMdefmin) {
        output.WriteInt32(21, field_names[25], Mdefmin);
      }
      if (hasMdefmax) {
        output.WriteInt32(22, field_names[24], Mdefmax);
      }
      if (hasMattmin) {
        output.WriteInt32(23, field_names[21], Mattmin);
      }
      if (hasMattmax) {
        output.WriteInt32(24, field_names[20], Mattmax);
      }
      if (hasHpmin) {
        output.WriteInt32(25, field_names[14], Hpmin);
      }
      if (hasHomax) {
        output.WriteInt32(26, field_names[13], Homax);
      }
      if (hasMpmin) {
        output.WriteInt32(27, field_names[30], Mpmin);
      }
      if (hasMpmax) {
        output.WriteInt32(28, field_names[29], Mpmax);
      }
      if (hasHitmin) {
        output.WriteInt32(29, field_names[12], Hitmin);
      }
      if (hasHitmax) {
        output.WriteInt32(30, field_names[11], Hitmax);
      }
      if (hasDodgemin) {
        output.WriteInt32(31, field_names[9], Dodgemin);
      }
      if (hasDodgemax) {
        output.WriteInt32(32, field_names[8], Dodgemax);
      }
      if (hasPhycrmin) {
        output.WriteInt32(33, field_names[33], Phycrmin);
      }
      if (hasPhycrmax) {
        output.WriteInt32(34, field_names[32], Phycrmax);
      }
      if (hasSkicrmin) {
        output.WriteInt32(35, field_names[39], Skicrmin);
      }
      if (hasSkicrmax) {
        output.WriteInt32(36, field_names[38], Skicrmax);
      }
      if (hasHpremin) {
        output.WriteInt32(37, field_names[16], Hpremin);
      }
      if (hasHpremax) {
        output.WriteInt32(38, field_names[15], Hpremax);
      }
      if (hasMpremin) {
        output.WriteInt32(39, field_names[31], Mpremin);
      }
      if (hasMoremax) {
        output.WriteInt32(40, field_names[28], Moremax);
      }
      if (hasRpmin) {
        output.WriteInt32(41, field_names[37], Rpmin);
      }
      if (hasRpmax) {
        output.WriteInt32(42, field_names[36], Rpmax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasClass) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Class);
        }
        if (hasEquiplv) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Equiplv);
        }
        if (hasAddvalue) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Addvalue);
        }
        if (hasStrmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Strmin);
        }
        if (hasStrmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Strmax);
        }
        if (hasDexmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Dexmin);
        }
        if (hasDexmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, Dexmax);
        }
        if (hasConmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, Conmin);
        }
        if (hasConmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, Conmax);
        }
        if (hasPowermin) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, Powermin);
        }
        if (hasPowermax) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, Powermax);
        }
        if (hasIntmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, Intmin);
        }
        if (hasIntmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, Intmax);
        }
        if (hasMinattmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, Minattmin);
        }
        if (hasMinattmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, Minattmax);
        }
        if (hasMaxattmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(17, Maxattmin);
        }
        if (hasMaxattmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(18, Maxattmax);
        }
        if (hasDefmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, Defmin);
        }
        if (hasDefmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(20, Defmax);
        }
        if (hasMdefmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(21, Mdefmin);
        }
        if (hasMdefmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(22, Mdefmax);
        }
        if (hasMattmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(23, Mattmin);
        }
        if (hasMattmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(24, Mattmax);
        }
        if (hasHpmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(25, Hpmin);
        }
        if (hasHomax) {
          size += pb::CodedOutputStream.ComputeInt32Size(26, Homax);
        }
        if (hasMpmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(27, Mpmin);
        }
        if (hasMpmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(28, Mpmax);
        }
        if (hasHitmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(29, Hitmin);
        }
        if (hasHitmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(30, Hitmax);
        }
        if (hasDodgemin) {
          size += pb::CodedOutputStream.ComputeInt32Size(31, Dodgemin);
        }
        if (hasDodgemax) {
          size += pb::CodedOutputStream.ComputeInt32Size(32, Dodgemax);
        }
        if (hasPhycrmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(33, Phycrmin);
        }
        if (hasPhycrmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(34, Phycrmax);
        }
        if (hasSkicrmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(35, Skicrmin);
        }
        if (hasSkicrmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(36, Skicrmax);
        }
        if (hasHpremin) {
          size += pb::CodedOutputStream.ComputeInt32Size(37, Hpremin);
        }
        if (hasHpremax) {
          size += pb::CodedOutputStream.ComputeInt32Size(38, Hpremax);
        }
        if (hasMpremin) {
          size += pb::CodedOutputStream.ComputeInt32Size(39, Mpremin);
        }
        if (hasMoremax) {
          size += pb::CodedOutputStream.ComputeInt32Size(40, Moremax);
        }
        if (hasRpmin) {
          size += pb::CodedOutputStream.ComputeInt32Size(41, Rpmin);
        }
        if (hasRpmax) {
          size += pb::CodedOutputStream.ComputeInt32Size(42, Rpmax);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SjsxBiao ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SjsxBiao ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SjsxBiao ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SjsxBiao ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SjsxBiao ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SjsxBiao MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SjsxBiao prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SjsxBiao, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SjsxBiao cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SjsxBiao result;
      
      private SjsxBiao PrepareBuilder() {
        if (resultIsReadOnly) {
          SjsxBiao original = result;
          result = new SjsxBiao();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SjsxBiao MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.equip.SjsxBiao.Descriptor; }
      }
      
      public override SjsxBiao DefaultInstanceForType {
        get { return global::world.equip.SjsxBiao.DefaultInstance; }
      }
      
      public override SjsxBiao BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SjsxBiao) {
          return MergeFrom((SjsxBiao) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SjsxBiao other) {
        if (other == global::world.equip.SjsxBiao.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasClass) {
          Class = other.Class;
        }
        if (other.HasEquiplv) {
          Equiplv = other.Equiplv;
        }
        if (other.HasAddvalue) {
          Addvalue = other.Addvalue;
        }
        if (other.HasStrmin) {
          Strmin = other.Strmin;
        }
        if (other.HasStrmax) {
          Strmax = other.Strmax;
        }
        if (other.HasDexmin) {
          Dexmin = other.Dexmin;
        }
        if (other.HasDexmax) {
          Dexmax = other.Dexmax;
        }
        if (other.HasConmin) {
          Conmin = other.Conmin;
        }
        if (other.HasConmax) {
          Conmax = other.Conmax;
        }
        if (other.HasPowermin) {
          Powermin = other.Powermin;
        }
        if (other.HasPowermax) {
          Powermax = other.Powermax;
        }
        if (other.HasIntmin) {
          Intmin = other.Intmin;
        }
        if (other.HasIntmax) {
          Intmax = other.Intmax;
        }
        if (other.HasMinattmin) {
          Minattmin = other.Minattmin;
        }
        if (other.HasMinattmax) {
          Minattmax = other.Minattmax;
        }
        if (other.HasMaxattmin) {
          Maxattmin = other.Maxattmin;
        }
        if (other.HasMaxattmax) {
          Maxattmax = other.Maxattmax;
        }
        if (other.HasDefmin) {
          Defmin = other.Defmin;
        }
        if (other.HasDefmax) {
          Defmax = other.Defmax;
        }
        if (other.HasMdefmin) {
          Mdefmin = other.Mdefmin;
        }
        if (other.HasMdefmax) {
          Mdefmax = other.Mdefmax;
        }
        if (other.HasMattmin) {
          Mattmin = other.Mattmin;
        }
        if (other.HasMattmax) {
          Mattmax = other.Mattmax;
        }
        if (other.HasHpmin) {
          Hpmin = other.Hpmin;
        }
        if (other.HasHomax) {
          Homax = other.Homax;
        }
        if (other.HasMpmin) {
          Mpmin = other.Mpmin;
        }
        if (other.HasMpmax) {
          Mpmax = other.Mpmax;
        }
        if (other.HasHitmin) {
          Hitmin = other.Hitmin;
        }
        if (other.HasHitmax) {
          Hitmax = other.Hitmax;
        }
        if (other.HasDodgemin) {
          Dodgemin = other.Dodgemin;
        }
        if (other.HasDodgemax) {
          Dodgemax = other.Dodgemax;
        }
        if (other.HasPhycrmin) {
          Phycrmin = other.Phycrmin;
        }
        if (other.HasPhycrmax) {
          Phycrmax = other.Phycrmax;
        }
        if (other.HasSkicrmin) {
          Skicrmin = other.Skicrmin;
        }
        if (other.HasSkicrmax) {
          Skicrmax = other.Skicrmax;
        }
        if (other.HasHpremin) {
          Hpremin = other.Hpremin;
        }
        if (other.HasHpremax) {
          Hpremax = other.Hpremax;
        }
        if (other.HasMpremin) {
          Mpremin = other.Mpremin;
        }
        if (other.HasMoremax) {
          Moremax = other.Moremax;
        }
        if (other.HasRpmin) {
          Rpmin = other.Rpmin;
        }
        if (other.HasRpmax) {
          Rpmax = other.Rpmax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sjsxBiaoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sjsxBiaoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.class_, out unknown)) {
                result.hasClass = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasEquiplv = input.ReadInt32(ref result.equiplv_);
              break;
            }
            case 32: {
              result.hasAddvalue = input.ReadInt32(ref result.addvalue_);
              break;
            }
            case 40: {
              result.hasStrmin = input.ReadInt32(ref result.strmin_);
              break;
            }
            case 48: {
              result.hasStrmax = input.ReadInt32(ref result.strmax_);
              break;
            }
            case 56: {
              result.hasDexmin = input.ReadInt32(ref result.dexmin_);
              break;
            }
            case 64: {
              result.hasDexmax = input.ReadInt32(ref result.dexmax_);
              break;
            }
            case 72: {
              result.hasConmin = input.ReadInt32(ref result.conmin_);
              break;
            }
            case 80: {
              result.hasConmax = input.ReadInt32(ref result.conmax_);
              break;
            }
            case 88: {
              result.hasPowermin = input.ReadInt32(ref result.powermin_);
              break;
            }
            case 96: {
              result.hasPowermax = input.ReadInt32(ref result.powermax_);
              break;
            }
            case 104: {
              result.hasIntmin = input.ReadInt32(ref result.intmin_);
              break;
            }
            case 112: {
              result.hasIntmax = input.ReadInt32(ref result.intmax_);
              break;
            }
            case 120: {
              result.hasMinattmin = input.ReadInt32(ref result.minattmin_);
              break;
            }
            case 128: {
              result.hasMinattmax = input.ReadInt32(ref result.minattmax_);
              break;
            }
            case 136: {
              result.hasMaxattmin = input.ReadInt32(ref result.maxattmin_);
              break;
            }
            case 144: {
              result.hasMaxattmax = input.ReadInt32(ref result.maxattmax_);
              break;
            }
            case 152: {
              result.hasDefmin = input.ReadInt32(ref result.defmin_);
              break;
            }
            case 160: {
              result.hasDefmax = input.ReadInt32(ref result.defmax_);
              break;
            }
            case 168: {
              result.hasMdefmin = input.ReadInt32(ref result.mdefmin_);
              break;
            }
            case 176: {
              result.hasMdefmax = input.ReadInt32(ref result.mdefmax_);
              break;
            }
            case 184: {
              result.hasMattmin = input.ReadInt32(ref result.mattmin_);
              break;
            }
            case 192: {
              result.hasMattmax = input.ReadInt32(ref result.mattmax_);
              break;
            }
            case 200: {
              result.hasHpmin = input.ReadInt32(ref result.hpmin_);
              break;
            }
            case 208: {
              result.hasHomax = input.ReadInt32(ref result.homax_);
              break;
            }
            case 216: {
              result.hasMpmin = input.ReadInt32(ref result.mpmin_);
              break;
            }
            case 224: {
              result.hasMpmax = input.ReadInt32(ref result.mpmax_);
              break;
            }
            case 232: {
              result.hasHitmin = input.ReadInt32(ref result.hitmin_);
              break;
            }
            case 240: {
              result.hasHitmax = input.ReadInt32(ref result.hitmax_);
              break;
            }
            case 248: {
              result.hasDodgemin = input.ReadInt32(ref result.dodgemin_);
              break;
            }
            case 256: {
              result.hasDodgemax = input.ReadInt32(ref result.dodgemax_);
              break;
            }
            case 264: {
              result.hasPhycrmin = input.ReadInt32(ref result.phycrmin_);
              break;
            }
            case 272: {
              result.hasPhycrmax = input.ReadInt32(ref result.phycrmax_);
              break;
            }
            case 280: {
              result.hasSkicrmin = input.ReadInt32(ref result.skicrmin_);
              break;
            }
            case 288: {
              result.hasSkicrmax = input.ReadInt32(ref result.skicrmax_);
              break;
            }
            case 296: {
              result.hasHpremin = input.ReadInt32(ref result.hpremin_);
              break;
            }
            case 304: {
              result.hasHpremax = input.ReadInt32(ref result.hpremax_);
              break;
            }
            case 312: {
              result.hasMpremin = input.ReadInt32(ref result.mpremin_);
              break;
            }
            case 320: {
              result.hasMoremax = input.ReadInt32(ref result.moremax_);
              break;
            }
            case 328: {
              result.hasRpmin = input.ReadInt32(ref result.rpmin_);
              break;
            }
            case 336: {
              result.hasRpmax = input.ReadInt32(ref result.rpmax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasClass {
       get { return result.hasClass; }
      }
      public global::world.equip.SjsxBiao.Types.class_Enum Class {
        get { return result.Class; }
        set { SetClass(value); }
      }
      public Builder SetClass(global::world.equip.SjsxBiao.Types.class_Enum value) {
        PrepareBuilder();
        result.hasClass = true;
        result.class_ = value;
        return this;
      }
      public Builder ClearClass() {
        PrepareBuilder();
        result.hasClass = false;
        result.class_ = global::world.equip.SjsxBiao.Types.class_Enum.class_0;
        return this;
      }
      
      public bool HasEquiplv {
        get { return result.hasEquiplv; }
      }
      public int Equiplv {
        get { return result.Equiplv; }
        set { SetEquiplv(value); }
      }
      public Builder SetEquiplv(int value) {
        PrepareBuilder();
        result.hasEquiplv = true;
        result.equiplv_ = value;
        return this;
      }
      public Builder ClearEquiplv() {
        PrepareBuilder();
        result.hasEquiplv = false;
        result.equiplv_ = 0;
        return this;
      }
      
      public bool HasAddvalue {
        get { return result.hasAddvalue; }
      }
      public int Addvalue {
        get { return result.Addvalue; }
        set { SetAddvalue(value); }
      }
      public Builder SetAddvalue(int value) {
        PrepareBuilder();
        result.hasAddvalue = true;
        result.addvalue_ = value;
        return this;
      }
      public Builder ClearAddvalue() {
        PrepareBuilder();
        result.hasAddvalue = false;
        result.addvalue_ = 0;
        return this;
      }
      
      public bool HasStrmin {
        get { return result.hasStrmin; }
      }
      public int Strmin {
        get { return result.Strmin; }
        set { SetStrmin(value); }
      }
      public Builder SetStrmin(int value) {
        PrepareBuilder();
        result.hasStrmin = true;
        result.strmin_ = value;
        return this;
      }
      public Builder ClearStrmin() {
        PrepareBuilder();
        result.hasStrmin = false;
        result.strmin_ = 0;
        return this;
      }
      
      public bool HasStrmax {
        get { return result.hasStrmax; }
      }
      public int Strmax {
        get { return result.Strmax; }
        set { SetStrmax(value); }
      }
      public Builder SetStrmax(int value) {
        PrepareBuilder();
        result.hasStrmax = true;
        result.strmax_ = value;
        return this;
      }
      public Builder ClearStrmax() {
        PrepareBuilder();
        result.hasStrmax = false;
        result.strmax_ = 0;
        return this;
      }
      
      public bool HasDexmin {
        get { return result.hasDexmin; }
      }
      public int Dexmin {
        get { return result.Dexmin; }
        set { SetDexmin(value); }
      }
      public Builder SetDexmin(int value) {
        PrepareBuilder();
        result.hasDexmin = true;
        result.dexmin_ = value;
        return this;
      }
      public Builder ClearDexmin() {
        PrepareBuilder();
        result.hasDexmin = false;
        result.dexmin_ = 0;
        return this;
      }
      
      public bool HasDexmax {
        get { return result.hasDexmax; }
      }
      public int Dexmax {
        get { return result.Dexmax; }
        set { SetDexmax(value); }
      }
      public Builder SetDexmax(int value) {
        PrepareBuilder();
        result.hasDexmax = true;
        result.dexmax_ = value;
        return this;
      }
      public Builder ClearDexmax() {
        PrepareBuilder();
        result.hasDexmax = false;
        result.dexmax_ = 0;
        return this;
      }
      
      public bool HasConmin {
        get { return result.hasConmin; }
      }
      public int Conmin {
        get { return result.Conmin; }
        set { SetConmin(value); }
      }
      public Builder SetConmin(int value) {
        PrepareBuilder();
        result.hasConmin = true;
        result.conmin_ = value;
        return this;
      }
      public Builder ClearConmin() {
        PrepareBuilder();
        result.hasConmin = false;
        result.conmin_ = 0;
        return this;
      }
      
      public bool HasConmax {
        get { return result.hasConmax; }
      }
      public int Conmax {
        get { return result.Conmax; }
        set { SetConmax(value); }
      }
      public Builder SetConmax(int value) {
        PrepareBuilder();
        result.hasConmax = true;
        result.conmax_ = value;
        return this;
      }
      public Builder ClearConmax() {
        PrepareBuilder();
        result.hasConmax = false;
        result.conmax_ = 0;
        return this;
      }
      
      public bool HasPowermin {
        get { return result.hasPowermin; }
      }
      public int Powermin {
        get { return result.Powermin; }
        set { SetPowermin(value); }
      }
      public Builder SetPowermin(int value) {
        PrepareBuilder();
        result.hasPowermin = true;
        result.powermin_ = value;
        return this;
      }
      public Builder ClearPowermin() {
        PrepareBuilder();
        result.hasPowermin = false;
        result.powermin_ = 0;
        return this;
      }
      
      public bool HasPowermax {
        get { return result.hasPowermax; }
      }
      public int Powermax {
        get { return result.Powermax; }
        set { SetPowermax(value); }
      }
      public Builder SetPowermax(int value) {
        PrepareBuilder();
        result.hasPowermax = true;
        result.powermax_ = value;
        return this;
      }
      public Builder ClearPowermax() {
        PrepareBuilder();
        result.hasPowermax = false;
        result.powermax_ = 0;
        return this;
      }
      
      public bool HasIntmin {
        get { return result.hasIntmin; }
      }
      public int Intmin {
        get { return result.Intmin; }
        set { SetIntmin(value); }
      }
      public Builder SetIntmin(int value) {
        PrepareBuilder();
        result.hasIntmin = true;
        result.intmin_ = value;
        return this;
      }
      public Builder ClearIntmin() {
        PrepareBuilder();
        result.hasIntmin = false;
        result.intmin_ = 0;
        return this;
      }
      
      public bool HasIntmax {
        get { return result.hasIntmax; }
      }
      public int Intmax {
        get { return result.Intmax; }
        set { SetIntmax(value); }
      }
      public Builder SetIntmax(int value) {
        PrepareBuilder();
        result.hasIntmax = true;
        result.intmax_ = value;
        return this;
      }
      public Builder ClearIntmax() {
        PrepareBuilder();
        result.hasIntmax = false;
        result.intmax_ = 0;
        return this;
      }
      
      public bool HasMinattmin {
        get { return result.hasMinattmin; }
      }
      public int Minattmin {
        get { return result.Minattmin; }
        set { SetMinattmin(value); }
      }
      public Builder SetMinattmin(int value) {
        PrepareBuilder();
        result.hasMinattmin = true;
        result.minattmin_ = value;
        return this;
      }
      public Builder ClearMinattmin() {
        PrepareBuilder();
        result.hasMinattmin = false;
        result.minattmin_ = 0;
        return this;
      }
      
      public bool HasMinattmax {
        get { return result.hasMinattmax; }
      }
      public int Minattmax {
        get { return result.Minattmax; }
        set { SetMinattmax(value); }
      }
      public Builder SetMinattmax(int value) {
        PrepareBuilder();
        result.hasMinattmax = true;
        result.minattmax_ = value;
        return this;
      }
      public Builder ClearMinattmax() {
        PrepareBuilder();
        result.hasMinattmax = false;
        result.minattmax_ = 0;
        return this;
      }
      
      public bool HasMaxattmin {
        get { return result.hasMaxattmin; }
      }
      public int Maxattmin {
        get { return result.Maxattmin; }
        set { SetMaxattmin(value); }
      }
      public Builder SetMaxattmin(int value) {
        PrepareBuilder();
        result.hasMaxattmin = true;
        result.maxattmin_ = value;
        return this;
      }
      public Builder ClearMaxattmin() {
        PrepareBuilder();
        result.hasMaxattmin = false;
        result.maxattmin_ = 0;
        return this;
      }
      
      public bool HasMaxattmax {
        get { return result.hasMaxattmax; }
      }
      public int Maxattmax {
        get { return result.Maxattmax; }
        set { SetMaxattmax(value); }
      }
      public Builder SetMaxattmax(int value) {
        PrepareBuilder();
        result.hasMaxattmax = true;
        result.maxattmax_ = value;
        return this;
      }
      public Builder ClearMaxattmax() {
        PrepareBuilder();
        result.hasMaxattmax = false;
        result.maxattmax_ = 0;
        return this;
      }
      
      public bool HasDefmin {
        get { return result.hasDefmin; }
      }
      public int Defmin {
        get { return result.Defmin; }
        set { SetDefmin(value); }
      }
      public Builder SetDefmin(int value) {
        PrepareBuilder();
        result.hasDefmin = true;
        result.defmin_ = value;
        return this;
      }
      public Builder ClearDefmin() {
        PrepareBuilder();
        result.hasDefmin = false;
        result.defmin_ = 0;
        return this;
      }
      
      public bool HasDefmax {
        get { return result.hasDefmax; }
      }
      public int Defmax {
        get { return result.Defmax; }
        set { SetDefmax(value); }
      }
      public Builder SetDefmax(int value) {
        PrepareBuilder();
        result.hasDefmax = true;
        result.defmax_ = value;
        return this;
      }
      public Builder ClearDefmax() {
        PrepareBuilder();
        result.hasDefmax = false;
        result.defmax_ = 0;
        return this;
      }
      
      public bool HasMdefmin {
        get { return result.hasMdefmin; }
      }
      public int Mdefmin {
        get { return result.Mdefmin; }
        set { SetMdefmin(value); }
      }
      public Builder SetMdefmin(int value) {
        PrepareBuilder();
        result.hasMdefmin = true;
        result.mdefmin_ = value;
        return this;
      }
      public Builder ClearMdefmin() {
        PrepareBuilder();
        result.hasMdefmin = false;
        result.mdefmin_ = 0;
        return this;
      }
      
      public bool HasMdefmax {
        get { return result.hasMdefmax; }
      }
      public int Mdefmax {
        get { return result.Mdefmax; }
        set { SetMdefmax(value); }
      }
      public Builder SetMdefmax(int value) {
        PrepareBuilder();
        result.hasMdefmax = true;
        result.mdefmax_ = value;
        return this;
      }
      public Builder ClearMdefmax() {
        PrepareBuilder();
        result.hasMdefmax = false;
        result.mdefmax_ = 0;
        return this;
      }
      
      public bool HasMattmin {
        get { return result.hasMattmin; }
      }
      public int Mattmin {
        get { return result.Mattmin; }
        set { SetMattmin(value); }
      }
      public Builder SetMattmin(int value) {
        PrepareBuilder();
        result.hasMattmin = true;
        result.mattmin_ = value;
        return this;
      }
      public Builder ClearMattmin() {
        PrepareBuilder();
        result.hasMattmin = false;
        result.mattmin_ = 0;
        return this;
      }
      
      public bool HasMattmax {
        get { return result.hasMattmax; }
      }
      public int Mattmax {
        get { return result.Mattmax; }
        set { SetMattmax(value); }
      }
      public Builder SetMattmax(int value) {
        PrepareBuilder();
        result.hasMattmax = true;
        result.mattmax_ = value;
        return this;
      }
      public Builder ClearMattmax() {
        PrepareBuilder();
        result.hasMattmax = false;
        result.mattmax_ = 0;
        return this;
      }
      
      public bool HasHpmin {
        get { return result.hasHpmin; }
      }
      public int Hpmin {
        get { return result.Hpmin; }
        set { SetHpmin(value); }
      }
      public Builder SetHpmin(int value) {
        PrepareBuilder();
        result.hasHpmin = true;
        result.hpmin_ = value;
        return this;
      }
      public Builder ClearHpmin() {
        PrepareBuilder();
        result.hasHpmin = false;
        result.hpmin_ = 0;
        return this;
      }
      
      public bool HasHomax {
        get { return result.hasHomax; }
      }
      public int Homax {
        get { return result.Homax; }
        set { SetHomax(value); }
      }
      public Builder SetHomax(int value) {
        PrepareBuilder();
        result.hasHomax = true;
        result.homax_ = value;
        return this;
      }
      public Builder ClearHomax() {
        PrepareBuilder();
        result.hasHomax = false;
        result.homax_ = 0;
        return this;
      }
      
      public bool HasMpmin {
        get { return result.hasMpmin; }
      }
      public int Mpmin {
        get { return result.Mpmin; }
        set { SetMpmin(value); }
      }
      public Builder SetMpmin(int value) {
        PrepareBuilder();
        result.hasMpmin = true;
        result.mpmin_ = value;
        return this;
      }
      public Builder ClearMpmin() {
        PrepareBuilder();
        result.hasMpmin = false;
        result.mpmin_ = 0;
        return this;
      }
      
      public bool HasMpmax {
        get { return result.hasMpmax; }
      }
      public int Mpmax {
        get { return result.Mpmax; }
        set { SetMpmax(value); }
      }
      public Builder SetMpmax(int value) {
        PrepareBuilder();
        result.hasMpmax = true;
        result.mpmax_ = value;
        return this;
      }
      public Builder ClearMpmax() {
        PrepareBuilder();
        result.hasMpmax = false;
        result.mpmax_ = 0;
        return this;
      }
      
      public bool HasHitmin {
        get { return result.hasHitmin; }
      }
      public int Hitmin {
        get { return result.Hitmin; }
        set { SetHitmin(value); }
      }
      public Builder SetHitmin(int value) {
        PrepareBuilder();
        result.hasHitmin = true;
        result.hitmin_ = value;
        return this;
      }
      public Builder ClearHitmin() {
        PrepareBuilder();
        result.hasHitmin = false;
        result.hitmin_ = 0;
        return this;
      }
      
      public bool HasHitmax {
        get { return result.hasHitmax; }
      }
      public int Hitmax {
        get { return result.Hitmax; }
        set { SetHitmax(value); }
      }
      public Builder SetHitmax(int value) {
        PrepareBuilder();
        result.hasHitmax = true;
        result.hitmax_ = value;
        return this;
      }
      public Builder ClearHitmax() {
        PrepareBuilder();
        result.hasHitmax = false;
        result.hitmax_ = 0;
        return this;
      }
      
      public bool HasDodgemin {
        get { return result.hasDodgemin; }
      }
      public int Dodgemin {
        get { return result.Dodgemin; }
        set { SetDodgemin(value); }
      }
      public Builder SetDodgemin(int value) {
        PrepareBuilder();
        result.hasDodgemin = true;
        result.dodgemin_ = value;
        return this;
      }
      public Builder ClearDodgemin() {
        PrepareBuilder();
        result.hasDodgemin = false;
        result.dodgemin_ = 0;
        return this;
      }
      
      public bool HasDodgemax {
        get { return result.hasDodgemax; }
      }
      public int Dodgemax {
        get { return result.Dodgemax; }
        set { SetDodgemax(value); }
      }
      public Builder SetDodgemax(int value) {
        PrepareBuilder();
        result.hasDodgemax = true;
        result.dodgemax_ = value;
        return this;
      }
      public Builder ClearDodgemax() {
        PrepareBuilder();
        result.hasDodgemax = false;
        result.dodgemax_ = 0;
        return this;
      }
      
      public bool HasPhycrmin {
        get { return result.hasPhycrmin; }
      }
      public int Phycrmin {
        get { return result.Phycrmin; }
        set { SetPhycrmin(value); }
      }
      public Builder SetPhycrmin(int value) {
        PrepareBuilder();
        result.hasPhycrmin = true;
        result.phycrmin_ = value;
        return this;
      }
      public Builder ClearPhycrmin() {
        PrepareBuilder();
        result.hasPhycrmin = false;
        result.phycrmin_ = 0;
        return this;
      }
      
      public bool HasPhycrmax {
        get { return result.hasPhycrmax; }
      }
      public int Phycrmax {
        get { return result.Phycrmax; }
        set { SetPhycrmax(value); }
      }
      public Builder SetPhycrmax(int value) {
        PrepareBuilder();
        result.hasPhycrmax = true;
        result.phycrmax_ = value;
        return this;
      }
      public Builder ClearPhycrmax() {
        PrepareBuilder();
        result.hasPhycrmax = false;
        result.phycrmax_ = 0;
        return this;
      }
      
      public bool HasSkicrmin {
        get { return result.hasSkicrmin; }
      }
      public int Skicrmin {
        get { return result.Skicrmin; }
        set { SetSkicrmin(value); }
      }
      public Builder SetSkicrmin(int value) {
        PrepareBuilder();
        result.hasSkicrmin = true;
        result.skicrmin_ = value;
        return this;
      }
      public Builder ClearSkicrmin() {
        PrepareBuilder();
        result.hasSkicrmin = false;
        result.skicrmin_ = 0;
        return this;
      }
      
      public bool HasSkicrmax {
        get { return result.hasSkicrmax; }
      }
      public int Skicrmax {
        get { return result.Skicrmax; }
        set { SetSkicrmax(value); }
      }
      public Builder SetSkicrmax(int value) {
        PrepareBuilder();
        result.hasSkicrmax = true;
        result.skicrmax_ = value;
        return this;
      }
      public Builder ClearSkicrmax() {
        PrepareBuilder();
        result.hasSkicrmax = false;
        result.skicrmax_ = 0;
        return this;
      }
      
      public bool HasHpremin {
        get { return result.hasHpremin; }
      }
      public int Hpremin {
        get { return result.Hpremin; }
        set { SetHpremin(value); }
      }
      public Builder SetHpremin(int value) {
        PrepareBuilder();
        result.hasHpremin = true;
        result.hpremin_ = value;
        return this;
      }
      public Builder ClearHpremin() {
        PrepareBuilder();
        result.hasHpremin = false;
        result.hpremin_ = 0;
        return this;
      }
      
      public bool HasHpremax {
        get { return result.hasHpremax; }
      }
      public int Hpremax {
        get { return result.Hpremax; }
        set { SetHpremax(value); }
      }
      public Builder SetHpremax(int value) {
        PrepareBuilder();
        result.hasHpremax = true;
        result.hpremax_ = value;
        return this;
      }
      public Builder ClearHpremax() {
        PrepareBuilder();
        result.hasHpremax = false;
        result.hpremax_ = 0;
        return this;
      }
      
      public bool HasMpremin {
        get { return result.hasMpremin; }
      }
      public int Mpremin {
        get { return result.Mpremin; }
        set { SetMpremin(value); }
      }
      public Builder SetMpremin(int value) {
        PrepareBuilder();
        result.hasMpremin = true;
        result.mpremin_ = value;
        return this;
      }
      public Builder ClearMpremin() {
        PrepareBuilder();
        result.hasMpremin = false;
        result.mpremin_ = 0;
        return this;
      }
      
      public bool HasMoremax {
        get { return result.hasMoremax; }
      }
      public int Moremax {
        get { return result.Moremax; }
        set { SetMoremax(value); }
      }
      public Builder SetMoremax(int value) {
        PrepareBuilder();
        result.hasMoremax = true;
        result.moremax_ = value;
        return this;
      }
      public Builder ClearMoremax() {
        PrepareBuilder();
        result.hasMoremax = false;
        result.moremax_ = 0;
        return this;
      }
      
      public bool HasRpmin {
        get { return result.hasRpmin; }
      }
      public int Rpmin {
        get { return result.Rpmin; }
        set { SetRpmin(value); }
      }
      public Builder SetRpmin(int value) {
        PrepareBuilder();
        result.hasRpmin = true;
        result.rpmin_ = value;
        return this;
      }
      public Builder ClearRpmin() {
        PrepareBuilder();
        result.hasRpmin = false;
        result.rpmin_ = 0;
        return this;
      }
      
      public bool HasRpmax {
        get { return result.hasRpmax; }
      }
      public int Rpmax {
        get { return result.Rpmax; }
        set { SetRpmax(value); }
      }
      public Builder SetRpmax(int value) {
        PrepareBuilder();
        result.hasRpmax = true;
        result.rpmax_ = value;
        return this;
      }
      public Builder ClearRpmax() {
        PrepareBuilder();
        result.hasRpmax = false;
        result.rpmax_ = 0;
        return this;
      }
    }
    static SjsxBiao() {
      object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GdsxBiao : pb::GeneratedMessage<GdsxBiao, GdsxBiao.Builder> {
    private GdsxBiao() { }
    private static readonly GdsxBiao defaultInstance = new GdsxBiao().MakeReadOnly();
    private static readonly string[] _gdsxBiaoFieldNames = new string[] { "jobs" };
    private static readonly uint[] _gdsxBiaoFieldTags = new uint[] { 10 };
    public static GdsxBiao DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GdsxBiao DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GdsxBiao ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.equip.Equip.internal__static_world_equip_GdsxBiao__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GdsxBiao, GdsxBiao.Builder> InternalFieldAccessors {
      get { return global::world.equip.Equip.internal__static_world_equip_GdsxBiao__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class Job : pb::GeneratedMessage<Job, Job.Builder> {
        private Job() { }
        private static readonly Job defaultInstance = new Job().MakeReadOnly();
        private static readonly string[] _jobFieldNames = new string[] { "shuxingID" };
        private static readonly uint[] _jobFieldTags = new uint[] { 8 };
        public static Job DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Job DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Job ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::world.equip.Equip.internal__static_world_equip_GdsxBiao_Job__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Job, Job.Builder> InternalFieldAccessors {
          get { return global::world.equip.Equip.internal__static_world_equip_GdsxBiao_Job__FieldAccessorTable; }
        }
        
        public const int ShuxingIDFieldNumber = 1;
        private pbc::PopsicleList<int> shuxingID_ = new pbc::PopsicleList<int>();
        public scg::IList<int> ShuxingIDList {
          get { return pbc::Lists.AsReadOnly(shuxingID_); }
        }
        public int ShuxingIDCount {
          get { return shuxingID_.Count; }
        }
        public int GetShuxingID(int index) {
          return shuxingID_[index];
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _jobFieldNames;
          if (shuxingID_.Count > 0) {
            output.WriteInt32Array(1, field_names[0], shuxingID_);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            {
              int dataSize = 0;
              foreach (int element in ShuxingIDList) {
                dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
              }
              size += dataSize;
              size += 1 * shuxingID_.Count;
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static Job ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Job ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Job ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Job ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Job ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Job ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Job ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Job ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Job ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Job ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Job MakeReadOnly() {
          shuxingID_.MakeReadOnly();
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Job prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<Job, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Job cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Job result;
          
          private Job PrepareBuilder() {
            if (resultIsReadOnly) {
              Job original = result;
              result = new Job();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Job MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::world.equip.GdsxBiao.Types.Job.Descriptor; }
          }
          
          public override Job DefaultInstanceForType {
            get { return global::world.equip.GdsxBiao.Types.Job.DefaultInstance; }
          }
          
          public override Job BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Job) {
              return MergeFrom((Job) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Job other) {
            if (other == global::world.equip.GdsxBiao.Types.Job.DefaultInstance) return this;
            PrepareBuilder();
            if (other.shuxingID_.Count != 0) {
              result.shuxingID_.Add(other.shuxingID_);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_jobFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _jobFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10:
                case 8: {
                  input.ReadInt32Array(tag, field_name, result.shuxingID_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public pbc::IPopsicleList<int> ShuxingIDList {
            get { return PrepareBuilder().shuxingID_; }
          }
          public int ShuxingIDCount {
            get { return result.ShuxingIDCount; }
          }
          public int GetShuxingID(int index) {
            return result.GetShuxingID(index);
          }
          public Builder SetShuxingID(int index, int value) {
            PrepareBuilder();
            result.shuxingID_[index] = value;
            return this;
          }
          public Builder AddShuxingID(int value) {
            PrepareBuilder();
            result.shuxingID_.Add(value);
            return this;
          }
          public Builder AddRangeShuxingID(scg::IEnumerable<int> values) {
            PrepareBuilder();
            result.shuxingID_.Add(values);
            return this;
          }
          public Builder ClearShuxingID() {
            PrepareBuilder();
            result.shuxingID_.Clear();
            return this;
          }
        }
        static Job() {
          object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int JobsFieldNumber = 1;
    private pbc::PopsicleList<global::world.equip.GdsxBiao.Types.Job> jobs_ = new pbc::PopsicleList<global::world.equip.GdsxBiao.Types.Job>();
    public scg::IList<global::world.equip.GdsxBiao.Types.Job> JobsList {
      get { return jobs_; }
    }
    public int JobsCount {
      get { return jobs_.Count; }
    }
    public global::world.equip.GdsxBiao.Types.Job GetJobs(int index) {
      return jobs_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gdsxBiaoFieldNames;
      if (jobs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], jobs_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::world.equip.GdsxBiao.Types.Job element in JobsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GdsxBiao ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GdsxBiao ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GdsxBiao ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GdsxBiao ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GdsxBiao ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GdsxBiao MakeReadOnly() {
      jobs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GdsxBiao prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GdsxBiao, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GdsxBiao cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GdsxBiao result;
      
      private GdsxBiao PrepareBuilder() {
        if (resultIsReadOnly) {
          GdsxBiao original = result;
          result = new GdsxBiao();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GdsxBiao MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.equip.GdsxBiao.Descriptor; }
      }
      
      public override GdsxBiao DefaultInstanceForType {
        get { return global::world.equip.GdsxBiao.DefaultInstance; }
      }
      
      public override GdsxBiao BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GdsxBiao) {
          return MergeFrom((GdsxBiao) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GdsxBiao other) {
        if (other == global::world.equip.GdsxBiao.DefaultInstance) return this;
        PrepareBuilder();
        if (other.jobs_.Count != 0) {
          result.jobs_.Add(other.jobs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gdsxBiaoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gdsxBiaoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.jobs_, global::world.equip.GdsxBiao.Types.Job.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::world.equip.GdsxBiao.Types.Job> JobsList {
        get { return PrepareBuilder().jobs_; }
      }
      public int JobsCount {
        get { return result.JobsCount; }
      }
      public global::world.equip.GdsxBiao.Types.Job GetJobs(int index) {
        return result.GetJobs(index);
      }
      public Builder SetJobs(int index, global::world.equip.GdsxBiao.Types.Job value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.jobs_[index] = value;
        return this;
      }
      public Builder SetJobs(int index, global::world.equip.GdsxBiao.Types.Job.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.jobs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddJobs(global::world.equip.GdsxBiao.Types.Job value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.jobs_.Add(value);
        return this;
      }
      public Builder AddJobs(global::world.equip.GdsxBiao.Types.Job.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.jobs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeJobs(scg::IEnumerable<global::world.equip.GdsxBiao.Types.Job> values) {
        PrepareBuilder();
        result.jobs_.Add(values);
        return this;
      }
      public Builder ClearJobs() {
        PrepareBuilder();
        result.jobs_.Clear();
        return this;
      }
    }
    static GdsxBiao() {
      object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Tables : pb::GeneratedMessage<Tables, Tables.Builder> {
    private Tables() { }
    private static readonly Tables defaultInstance = new Tables().MakeReadOnly();
    private static readonly string[] _tablesFieldNames = new string[] { "equip_buwei", "equip_gdxs", "equip_makes", "equip_sjsx" };
    private static readonly uint[] _tablesFieldTags = new uint[] { 18, 34, 10, 26 };
    public static Tables DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Tables DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Tables ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.equip.Equip.internal__static_world_equip_Tables__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Tables, Tables.Builder> InternalFieldAccessors {
      get { return global::world.equip.Equip.internal__static_world_equip_Tables__FieldAccessorTable; }
    }
    
    public const int EquipMakesFieldNumber = 1;
    private pbc::PopsicleList<global::world.equip.EquipMake> equipMakes_ = new pbc::PopsicleList<global::world.equip.EquipMake>();
    public scg::IList<global::world.equip.EquipMake> EquipMakesList {
      get { return equipMakes_; }
    }
    public int EquipMakesCount {
      get { return equipMakes_.Count; }
    }
    public global::world.equip.EquipMake GetEquipMakes(int index) {
      return equipMakes_[index];
    }
    
    public const int EquipBuweiFieldNumber = 2;
    private pbc::PopsicleList<global::world.equip.BuWeiXiShu> equipBuwei_ = new pbc::PopsicleList<global::world.equip.BuWeiXiShu>();
    public scg::IList<global::world.equip.BuWeiXiShu> EquipBuweiList {
      get { return equipBuwei_; }
    }
    public int EquipBuweiCount {
      get { return equipBuwei_.Count; }
    }
    public global::world.equip.BuWeiXiShu GetEquipBuwei(int index) {
      return equipBuwei_[index];
    }
    
    public const int EquipSjsxFieldNumber = 3;
    private pbc::PopsicleList<global::world.equip.SjsxBiao> equipSjsx_ = new pbc::PopsicleList<global::world.equip.SjsxBiao>();
    public scg::IList<global::world.equip.SjsxBiao> EquipSjsxList {
      get { return equipSjsx_; }
    }
    public int EquipSjsxCount {
      get { return equipSjsx_.Count; }
    }
    public global::world.equip.SjsxBiao GetEquipSjsx(int index) {
      return equipSjsx_[index];
    }
    
    public const int EquipGdxsFieldNumber = 4;
    private pbc::PopsicleList<global::world.equip.GdsxBiao> equipGdxs_ = new pbc::PopsicleList<global::world.equip.GdsxBiao>();
    public scg::IList<global::world.equip.GdsxBiao> EquipGdxsList {
      get { return equipGdxs_; }
    }
    public int EquipGdxsCount {
      get { return equipGdxs_.Count; }
    }
    public global::world.equip.GdsxBiao GetEquipGdxs(int index) {
      return equipGdxs_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::world.equip.EquipMake element in EquipMakesList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::world.equip.BuWeiXiShu element in EquipBuweiList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::world.equip.SjsxBiao element in EquipSjsxList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tablesFieldNames;
      if (equipMakes_.Count > 0) {
        output.WriteMessageArray(1, field_names[2], equipMakes_);
      }
      if (equipBuwei_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], equipBuwei_);
      }
      if (equipSjsx_.Count > 0) {
        output.WriteMessageArray(3, field_names[3], equipSjsx_);
      }
      if (equipGdxs_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], equipGdxs_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::world.equip.EquipMake element in EquipMakesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::world.equip.BuWeiXiShu element in EquipBuweiList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::world.equip.SjsxBiao element in EquipSjsxList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::world.equip.GdsxBiao element in EquipGdxsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Tables ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tables ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tables ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tables ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Tables ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Tables ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tables ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Tables MakeReadOnly() {
      equipMakes_.MakeReadOnly();
      equipBuwei_.MakeReadOnly();
      equipSjsx_.MakeReadOnly();
      equipGdxs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Tables prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Tables, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Tables cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Tables result;
      
      private Tables PrepareBuilder() {
        if (resultIsReadOnly) {
          Tables original = result;
          result = new Tables();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Tables MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.equip.Tables.Descriptor; }
      }
      
      public override Tables DefaultInstanceForType {
        get { return global::world.equip.Tables.DefaultInstance; }
      }
      
      public override Tables BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Tables) {
          return MergeFrom((Tables) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Tables other) {
        if (other == global::world.equip.Tables.DefaultInstance) return this;
        PrepareBuilder();
        if (other.equipMakes_.Count != 0) {
          result.equipMakes_.Add(other.equipMakes_);
        }
        if (other.equipBuwei_.Count != 0) {
          result.equipBuwei_.Add(other.equipBuwei_);
        }
        if (other.equipSjsx_.Count != 0) {
          result.equipSjsx_.Add(other.equipSjsx_);
        }
        if (other.equipGdxs_.Count != 0) {
          result.equipGdxs_.Add(other.equipGdxs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tablesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tablesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.equipMakes_, global::world.equip.EquipMake.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.equipBuwei_, global::world.equip.BuWeiXiShu.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.equipSjsx_, global::world.equip.SjsxBiao.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.equipGdxs_, global::world.equip.GdsxBiao.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::world.equip.EquipMake> EquipMakesList {
        get { return PrepareBuilder().equipMakes_; }
      }
      public int EquipMakesCount {
        get { return result.EquipMakesCount; }
      }
      public global::world.equip.EquipMake GetEquipMakes(int index) {
        return result.GetEquipMakes(index);
      }
      public Builder SetEquipMakes(int index, global::world.equip.EquipMake value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipMakes_[index] = value;
        return this;
      }
      public Builder SetEquipMakes(int index, global::world.equip.EquipMake.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipMakes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquipMakes(global::world.equip.EquipMake value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipMakes_.Add(value);
        return this;
      }
      public Builder AddEquipMakes(global::world.equip.EquipMake.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipMakes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquipMakes(scg::IEnumerable<global::world.equip.EquipMake> values) {
        PrepareBuilder();
        result.equipMakes_.Add(values);
        return this;
      }
      public Builder ClearEquipMakes() {
        PrepareBuilder();
        result.equipMakes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::world.equip.BuWeiXiShu> EquipBuweiList {
        get { return PrepareBuilder().equipBuwei_; }
      }
      public int EquipBuweiCount {
        get { return result.EquipBuweiCount; }
      }
      public global::world.equip.BuWeiXiShu GetEquipBuwei(int index) {
        return result.GetEquipBuwei(index);
      }
      public Builder SetEquipBuwei(int index, global::world.equip.BuWeiXiShu value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipBuwei_[index] = value;
        return this;
      }
      public Builder SetEquipBuwei(int index, global::world.equip.BuWeiXiShu.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipBuwei_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquipBuwei(global::world.equip.BuWeiXiShu value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipBuwei_.Add(value);
        return this;
      }
      public Builder AddEquipBuwei(global::world.equip.BuWeiXiShu.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipBuwei_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquipBuwei(scg::IEnumerable<global::world.equip.BuWeiXiShu> values) {
        PrepareBuilder();
        result.equipBuwei_.Add(values);
        return this;
      }
      public Builder ClearEquipBuwei() {
        PrepareBuilder();
        result.equipBuwei_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::world.equip.SjsxBiao> EquipSjsxList {
        get { return PrepareBuilder().equipSjsx_; }
      }
      public int EquipSjsxCount {
        get { return result.EquipSjsxCount; }
      }
      public global::world.equip.SjsxBiao GetEquipSjsx(int index) {
        return result.GetEquipSjsx(index);
      }
      public Builder SetEquipSjsx(int index, global::world.equip.SjsxBiao value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipSjsx_[index] = value;
        return this;
      }
      public Builder SetEquipSjsx(int index, global::world.equip.SjsxBiao.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipSjsx_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquipSjsx(global::world.equip.SjsxBiao value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipSjsx_.Add(value);
        return this;
      }
      public Builder AddEquipSjsx(global::world.equip.SjsxBiao.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipSjsx_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquipSjsx(scg::IEnumerable<global::world.equip.SjsxBiao> values) {
        PrepareBuilder();
        result.equipSjsx_.Add(values);
        return this;
      }
      public Builder ClearEquipSjsx() {
        PrepareBuilder();
        result.equipSjsx_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::world.equip.GdsxBiao> EquipGdxsList {
        get { return PrepareBuilder().equipGdxs_; }
      }
      public int EquipGdxsCount {
        get { return result.EquipGdxsCount; }
      }
      public global::world.equip.GdsxBiao GetEquipGdxs(int index) {
        return result.GetEquipGdxs(index);
      }
      public Builder SetEquipGdxs(int index, global::world.equip.GdsxBiao value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipGdxs_[index] = value;
        return this;
      }
      public Builder SetEquipGdxs(int index, global::world.equip.GdsxBiao.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipGdxs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquipGdxs(global::world.equip.GdsxBiao value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipGdxs_.Add(value);
        return this;
      }
      public Builder AddEquipGdxs(global::world.equip.GdsxBiao.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipGdxs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquipGdxs(scg::IEnumerable<global::world.equip.GdsxBiao> values) {
        PrepareBuilder();
        result.equipGdxs_.Add(values);
        return this;
      }
      public Builder ClearEquipGdxs() {
        PrepareBuilder();
        result.equipGdxs_.Clear();
        return this;
      }
    }
    static Tables() {
      object.ReferenceEquals(global::world.equip.Equip.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
