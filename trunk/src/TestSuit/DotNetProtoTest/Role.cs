// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace world.role {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Role {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_world_role_GivenItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.role.GivenItem, global::world.role.GivenItem.Builder> internal__static_world_role_GivenItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_role_Creator__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.role.Creator, global::world.role.Creator.Builder> internal__static_world_role_Creator__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_world_role_Tables__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::world.role.Tables, global::world.role.Tables.Builder> internal__static_world_role_Tables__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Role() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cgpyb2xlLnByb3RvEgp3b3JsZC5yb2xlGgxzeXN0ZW0ucHJvdG8iTAoJR2l2" + 
          "ZW5JdGVtEhwKCHRlbXBsYXRlGAEgAigLMgouY29yZS5CYXNlEg8KB292ZXJs" + 
          "YXAYAiACKAUSEAoIcG9zaXRpb24YAyACKAUiwgEKB0NyZWF0b3ISCQoBeBgB" + 
          "IAIoAhIJCgF5GAIgAigCEgkKAXoYAyACKAISCwoDbWFwGAQgAigFEgsKA3N0" + 
          "chgFIAIoBRILCgNhZ2kYBiACKAUSCwoDcGh5GAcgAigFEgsKA2NvbhgIIAIo" + 
          "BRILCgNpbnQYCSACKAUSDwoHYmFnX251bRgKIAIoBRIRCglkZXBvdF9udW0Y" + 
          "CyACKAUSJAoFaXRlbXMYDCADKAsyFS53b3JsZC5yb2xlLkdpdmVuSXRlbSJb" + 
          "CgZUYWJsZXMSJAoHY3JlYXRvchgBIAIoCzITLndvcmxkLnJvbGUuQ3JlYXRv" + 
          "chITCgtsZXZlbHVwX2V4cBgCIAMoBRIWCg5sZXZlbHVwX2dvbmdkZRgDIAMo" + 
          "BQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_world_role_GivenItem__Descriptor = Descriptor.MessageTypes[0];
        internal__static_world_role_GivenItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.role.GivenItem, global::world.role.GivenItem.Builder>(internal__static_world_role_GivenItem__Descriptor,
                new string[] { "Template", "Overlap", "Position", });
        internal__static_world_role_Creator__Descriptor = Descriptor.MessageTypes[1];
        internal__static_world_role_Creator__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.role.Creator, global::world.role.Creator.Builder>(internal__static_world_role_Creator__Descriptor,
                new string[] { "X", "Y", "Z", "Map", "Str", "Agi", "Phy", "Con", "Int", "BagNum", "DepotNum", "Items", });
        internal__static_world_role_Tables__Descriptor = Descriptor.MessageTypes[2];
        internal__static_world_role_Tables__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::world.role.Tables, global::world.role.Tables.Builder>(internal__static_world_role_Tables__Descriptor,
                new string[] { "Creator", "LevelupExp", "LevelupGongde", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::core.System.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GivenItem : pb::GeneratedMessage<GivenItem, GivenItem.Builder> {
    private GivenItem() { }
    private static readonly GivenItem defaultInstance = new GivenItem().MakeReadOnly();
    private static readonly string[] _givenItemFieldNames = new string[] { "overlap", "position", "template" };
    private static readonly uint[] _givenItemFieldTags = new uint[] { 16, 24, 10 };
    public static GivenItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GivenItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GivenItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.role.Role.internal__static_world_role_GivenItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GivenItem, GivenItem.Builder> InternalFieldAccessors {
      get { return global::world.role.Role.internal__static_world_role_GivenItem__FieldAccessorTable; }
    }
    
    public const int TemplateFieldNumber = 1;
    private bool hasTemplate;
    private global::core.Base template_;
    public bool HasTemplate {
      get { return hasTemplate; }
    }
    public global::core.Base Template {
      get { return template_ ?? global::core.Base.DefaultInstance; }
    }
    
    public const int OverlapFieldNumber = 2;
    private bool hasOverlap;
    private int overlap_;
    public bool HasOverlap {
      get { return hasOverlap; }
    }
    public int Overlap {
      get { return overlap_; }
    }
    
    public const int PositionFieldNumber = 3;
    private bool hasPosition;
    private int position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public int Position {
      get { return position_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTemplate) return false;
        if (!hasOverlap) return false;
        if (!hasPosition) return false;
        if (!Template.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _givenItemFieldNames;
      if (hasTemplate) {
        output.WriteMessage(1, field_names[2], Template);
      }
      if (hasOverlap) {
        output.WriteInt32(2, field_names[0], Overlap);
      }
      if (hasPosition) {
        output.WriteInt32(3, field_names[1], Position);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTemplate) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Template);
        }
        if (hasOverlap) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Overlap);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Position);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GivenItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GivenItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GivenItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GivenItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GivenItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GivenItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GivenItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GivenItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GivenItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GivenItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GivenItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GivenItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GivenItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GivenItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GivenItem result;
      
      private GivenItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GivenItem original = result;
          result = new GivenItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GivenItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.role.GivenItem.Descriptor; }
      }
      
      public override GivenItem DefaultInstanceForType {
        get { return global::world.role.GivenItem.DefaultInstance; }
      }
      
      public override GivenItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GivenItem) {
          return MergeFrom((GivenItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GivenItem other) {
        if (other == global::world.role.GivenItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTemplate) {
          MergeTemplate(other.Template);
        }
        if (other.HasOverlap) {
          Overlap = other.Overlap;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_givenItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _givenItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::core.Base.Builder subBuilder = global::core.Base.CreateBuilder();
              if (result.hasTemplate) {
                subBuilder.MergeFrom(Template);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Template = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOverlap = input.ReadInt32(ref result.overlap_);
              break;
            }
            case 24: {
              result.hasPosition = input.ReadInt32(ref result.position_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTemplate {
       get { return result.hasTemplate; }
      }
      public global::core.Base Template {
        get { return result.Template; }
        set { SetTemplate(value); }
      }
      public Builder SetTemplate(global::core.Base value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTemplate = true;
        result.template_ = value;
        return this;
      }
      public Builder SetTemplate(global::core.Base.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTemplate = true;
        result.template_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTemplate(global::core.Base value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTemplate &&
            result.template_ != global::core.Base.DefaultInstance) {
            result.template_ = global::core.Base.CreateBuilder(result.template_).MergeFrom(value).BuildPartial();
        } else {
          result.template_ = value;
        }
        result.hasTemplate = true;
        return this;
      }
      public Builder ClearTemplate() {
        PrepareBuilder();
        result.hasTemplate = false;
        result.template_ = null;
        return this;
      }
      
      public bool HasOverlap {
        get { return result.hasOverlap; }
      }
      public int Overlap {
        get { return result.Overlap; }
        set { SetOverlap(value); }
      }
      public Builder SetOverlap(int value) {
        PrepareBuilder();
        result.hasOverlap = true;
        result.overlap_ = value;
        return this;
      }
      public Builder ClearOverlap() {
        PrepareBuilder();
        result.hasOverlap = false;
        result.overlap_ = 0;
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public int Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(int value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
    }
    static GivenItem() {
      object.ReferenceEquals(global::world.role.Role.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Creator : pb::GeneratedMessage<Creator, Creator.Builder> {
    private Creator() { }
    private static readonly Creator defaultInstance = new Creator().MakeReadOnly();
    private static readonly string[] _creatorFieldNames = new string[] { "agi", "bag_num", "con", "depot_num", "int", "items", "map", "phy", "str", "x", "y", "z" };
    private static readonly uint[] _creatorFieldTags = new uint[] { 48, 80, 64, 88, 72, 98, 32, 56, 40, 13, 21, 29 };
    public static Creator DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Creator DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Creator ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.role.Role.internal__static_world_role_Creator__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Creator, Creator.Builder> InternalFieldAccessors {
      get { return global::world.role.Role.internal__static_world_role_Creator__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private float z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public float Z {
      get { return z_; }
    }
    
    public const int MapFieldNumber = 4;
    private bool hasMap;
    private int map_;
    public bool HasMap {
      get { return hasMap; }
    }
    public int Map {
      get { return map_; }
    }
    
    public const int StrFieldNumber = 5;
    private bool hasStr;
    private int str_;
    public bool HasStr {
      get { return hasStr; }
    }
    public int Str {
      get { return str_; }
    }
    
    public const int AgiFieldNumber = 6;
    private bool hasAgi;
    private int agi_;
    public bool HasAgi {
      get { return hasAgi; }
    }
    public int Agi {
      get { return agi_; }
    }
    
    public const int PhyFieldNumber = 7;
    private bool hasPhy;
    private int phy_;
    public bool HasPhy {
      get { return hasPhy; }
    }
    public int Phy {
      get { return phy_; }
    }
    
    public const int ConFieldNumber = 8;
    private bool hasCon;
    private int con_;
    public bool HasCon {
      get { return hasCon; }
    }
    public int Con {
      get { return con_; }
    }
    
    public const int IntFieldNumber = 9;
    private bool hasInt;
    private int int_;
    public bool HasInt {
      get { return hasInt; }
    }
    public int Int {
      get { return int_; }
    }
    
    public const int BagNumFieldNumber = 10;
    private bool hasBagNum;
    private int bagNum_;
    public bool HasBagNum {
      get { return hasBagNum; }
    }
    public int BagNum {
      get { return bagNum_; }
    }
    
    public const int DepotNumFieldNumber = 11;
    private bool hasDepotNum;
    private int depotNum_;
    public bool HasDepotNum {
      get { return hasDepotNum; }
    }
    public int DepotNum {
      get { return depotNum_; }
    }
    
    public const int ItemsFieldNumber = 12;
    private pbc::PopsicleList<global::world.role.GivenItem> items_ = new pbc::PopsicleList<global::world.role.GivenItem>();
    public scg::IList<global::world.role.GivenItem> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::world.role.GivenItem GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        if (!hasMap) return false;
        if (!hasStr) return false;
        if (!hasAgi) return false;
        if (!hasPhy) return false;
        if (!hasCon) return false;
        if (!hasInt) return false;
        if (!hasBagNum) return false;
        if (!hasDepotNum) return false;
        foreach (global::world.role.GivenItem element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _creatorFieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[9], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[10], Y);
      }
      if (hasZ) {
        output.WriteFloat(3, field_names[11], Z);
      }
      if (hasMap) {
        output.WriteInt32(4, field_names[6], Map);
      }
      if (hasStr) {
        output.WriteInt32(5, field_names[8], Str);
      }
      if (hasAgi) {
        output.WriteInt32(6, field_names[0], Agi);
      }
      if (hasPhy) {
        output.WriteInt32(7, field_names[7], Phy);
      }
      if (hasCon) {
        output.WriteInt32(8, field_names[2], Con);
      }
      if (hasInt) {
        output.WriteInt32(9, field_names[4], Int);
      }
      if (hasBagNum) {
        output.WriteInt32(10, field_names[1], BagNum);
      }
      if (hasDepotNum) {
        output.WriteInt32(11, field_names[3], DepotNum);
      }
      if (items_.Count > 0) {
        output.WriteMessageArray(12, field_names[5], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasX) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, Z);
        }
        if (hasMap) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Map);
        }
        if (hasStr) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Str);
        }
        if (hasAgi) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Agi);
        }
        if (hasPhy) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Phy);
        }
        if (hasCon) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, Con);
        }
        if (hasInt) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, Int);
        }
        if (hasBagNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, BagNum);
        }
        if (hasDepotNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, DepotNum);
        }
        foreach (global::world.role.GivenItem element in ItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Creator ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Creator ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Creator ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Creator ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Creator ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Creator ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Creator ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Creator ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Creator ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Creator ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Creator MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Creator prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Creator, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Creator cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Creator result;
      
      private Creator PrepareBuilder() {
        if (resultIsReadOnly) {
          Creator original = result;
          result = new Creator();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Creator MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.role.Creator.Descriptor; }
      }
      
      public override Creator DefaultInstanceForType {
        get { return global::world.role.Creator.DefaultInstance; }
      }
      
      public override Creator BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Creator) {
          return MergeFrom((Creator) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Creator other) {
        if (other == global::world.role.Creator.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        if (other.HasMap) {
          Map = other.Map;
        }
        if (other.HasStr) {
          Str = other.Str;
        }
        if (other.HasAgi) {
          Agi = other.Agi;
        }
        if (other.HasPhy) {
          Phy = other.Phy;
        }
        if (other.HasCon) {
          Con = other.Con;
        }
        if (other.HasInt) {
          Int = other.Int;
        }
        if (other.HasBagNum) {
          BagNum = other.BagNum;
        }
        if (other.HasDepotNum) {
          DepotNum = other.DepotNum;
        }
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_creatorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _creatorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 29: {
              result.hasZ = input.ReadFloat(ref result.z_);
              break;
            }
            case 32: {
              result.hasMap = input.ReadInt32(ref result.map_);
              break;
            }
            case 40: {
              result.hasStr = input.ReadInt32(ref result.str_);
              break;
            }
            case 48: {
              result.hasAgi = input.ReadInt32(ref result.agi_);
              break;
            }
            case 56: {
              result.hasPhy = input.ReadInt32(ref result.phy_);
              break;
            }
            case 64: {
              result.hasCon = input.ReadInt32(ref result.con_);
              break;
            }
            case 72: {
              result.hasInt = input.ReadInt32(ref result.int_);
              break;
            }
            case 80: {
              result.hasBagNum = input.ReadInt32(ref result.bagNum_);
              break;
            }
            case 88: {
              result.hasDepotNum = input.ReadInt32(ref result.depotNum_);
              break;
            }
            case 98: {
              input.ReadMessageArray(tag, field_name, result.items_, global::world.role.GivenItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public float Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(float value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
      
      public bool HasMap {
        get { return result.hasMap; }
      }
      public int Map {
        get { return result.Map; }
        set { SetMap(value); }
      }
      public Builder SetMap(int value) {
        PrepareBuilder();
        result.hasMap = true;
        result.map_ = value;
        return this;
      }
      public Builder ClearMap() {
        PrepareBuilder();
        result.hasMap = false;
        result.map_ = 0;
        return this;
      }
      
      public bool HasStr {
        get { return result.hasStr; }
      }
      public int Str {
        get { return result.Str; }
        set { SetStr(value); }
      }
      public Builder SetStr(int value) {
        PrepareBuilder();
        result.hasStr = true;
        result.str_ = value;
        return this;
      }
      public Builder ClearStr() {
        PrepareBuilder();
        result.hasStr = false;
        result.str_ = 0;
        return this;
      }
      
      public bool HasAgi {
        get { return result.hasAgi; }
      }
      public int Agi {
        get { return result.Agi; }
        set { SetAgi(value); }
      }
      public Builder SetAgi(int value) {
        PrepareBuilder();
        result.hasAgi = true;
        result.agi_ = value;
        return this;
      }
      public Builder ClearAgi() {
        PrepareBuilder();
        result.hasAgi = false;
        result.agi_ = 0;
        return this;
      }
      
      public bool HasPhy {
        get { return result.hasPhy; }
      }
      public int Phy {
        get { return result.Phy; }
        set { SetPhy(value); }
      }
      public Builder SetPhy(int value) {
        PrepareBuilder();
        result.hasPhy = true;
        result.phy_ = value;
        return this;
      }
      public Builder ClearPhy() {
        PrepareBuilder();
        result.hasPhy = false;
        result.phy_ = 0;
        return this;
      }
      
      public bool HasCon {
        get { return result.hasCon; }
      }
      public int Con {
        get { return result.Con; }
        set { SetCon(value); }
      }
      public Builder SetCon(int value) {
        PrepareBuilder();
        result.hasCon = true;
        result.con_ = value;
        return this;
      }
      public Builder ClearCon() {
        PrepareBuilder();
        result.hasCon = false;
        result.con_ = 0;
        return this;
      }
      
      public bool HasInt {
        get { return result.hasInt; }
      }
      public int Int {
        get { return result.Int; }
        set { SetInt(value); }
      }
      public Builder SetInt(int value) {
        PrepareBuilder();
        result.hasInt = true;
        result.int_ = value;
        return this;
      }
      public Builder ClearInt() {
        PrepareBuilder();
        result.hasInt = false;
        result.int_ = 0;
        return this;
      }
      
      public bool HasBagNum {
        get { return result.hasBagNum; }
      }
      public int BagNum {
        get { return result.BagNum; }
        set { SetBagNum(value); }
      }
      public Builder SetBagNum(int value) {
        PrepareBuilder();
        result.hasBagNum = true;
        result.bagNum_ = value;
        return this;
      }
      public Builder ClearBagNum() {
        PrepareBuilder();
        result.hasBagNum = false;
        result.bagNum_ = 0;
        return this;
      }
      
      public bool HasDepotNum {
        get { return result.hasDepotNum; }
      }
      public int DepotNum {
        get { return result.DepotNum; }
        set { SetDepotNum(value); }
      }
      public Builder SetDepotNum(int value) {
        PrepareBuilder();
        result.hasDepotNum = true;
        result.depotNum_ = value;
        return this;
      }
      public Builder ClearDepotNum() {
        PrepareBuilder();
        result.hasDepotNum = false;
        result.depotNum_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::world.role.GivenItem> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::world.role.GivenItem GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::world.role.GivenItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::world.role.GivenItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::world.role.GivenItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::world.role.GivenItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::world.role.GivenItem> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static Creator() {
      object.ReferenceEquals(global::world.role.Role.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Tables : pb::GeneratedMessage<Tables, Tables.Builder> {
    private Tables() { }
    private static readonly Tables defaultInstance = new Tables().MakeReadOnly();
    private static readonly string[] _tablesFieldNames = new string[] { "creator", "levelup_exp", "levelup_gongde" };
    private static readonly uint[] _tablesFieldTags = new uint[] { 10, 16, 24 };
    public static Tables DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Tables DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Tables ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::world.role.Role.internal__static_world_role_Tables__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Tables, Tables.Builder> InternalFieldAccessors {
      get { return global::world.role.Role.internal__static_world_role_Tables__FieldAccessorTable; }
    }
    
    public const int CreatorFieldNumber = 1;
    private bool hasCreator;
    private global::world.role.Creator creator_;
    public bool HasCreator {
      get { return hasCreator; }
    }
    public global::world.role.Creator Creator {
      get { return creator_ ?? global::world.role.Creator.DefaultInstance; }
    }
    
    public const int LevelupExpFieldNumber = 2;
    private pbc::PopsicleList<int> levelupExp_ = new pbc::PopsicleList<int>();
    public scg::IList<int> LevelupExpList {
      get { return pbc::Lists.AsReadOnly(levelupExp_); }
    }
    public int LevelupExpCount {
      get { return levelupExp_.Count; }
    }
    public int GetLevelupExp(int index) {
      return levelupExp_[index];
    }
    
    public const int LevelupGongdeFieldNumber = 3;
    private pbc::PopsicleList<int> levelupGongde_ = new pbc::PopsicleList<int>();
    public scg::IList<int> LevelupGongdeList {
      get { return pbc::Lists.AsReadOnly(levelupGongde_); }
    }
    public int LevelupGongdeCount {
      get { return levelupGongde_.Count; }
    }
    public int GetLevelupGongde(int index) {
      return levelupGongde_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCreator) return false;
        if (!Creator.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _tablesFieldNames;
      if (hasCreator) {
        output.WriteMessage(1, field_names[0], Creator);
      }
      if (levelupExp_.Count > 0) {
        output.WriteInt32Array(2, field_names[1], levelupExp_);
      }
      if (levelupGongde_.Count > 0) {
        output.WriteInt32Array(3, field_names[2], levelupGongde_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCreator) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Creator);
        }
        {
          int dataSize = 0;
          foreach (int element in LevelupExpList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * levelupExp_.Count;
        }
        {
          int dataSize = 0;
          foreach (int element in LevelupGongdeList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * levelupGongde_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Tables ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tables ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tables ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tables ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Tables ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Tables ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Tables ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tables ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Tables MakeReadOnly() {
      levelupExp_.MakeReadOnly();
      levelupGongde_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Tables prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Tables, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Tables cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Tables result;
      
      private Tables PrepareBuilder() {
        if (resultIsReadOnly) {
          Tables original = result;
          result = new Tables();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Tables MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::world.role.Tables.Descriptor; }
      }
      
      public override Tables DefaultInstanceForType {
        get { return global::world.role.Tables.DefaultInstance; }
      }
      
      public override Tables BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Tables) {
          return MergeFrom((Tables) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Tables other) {
        if (other == global::world.role.Tables.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCreator) {
          MergeCreator(other.Creator);
        }
        if (other.levelupExp_.Count != 0) {
          result.levelupExp_.Add(other.levelupExp_);
        }
        if (other.levelupGongde_.Count != 0) {
          result.levelupGongde_.Add(other.levelupGongde_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tablesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tablesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::world.role.Creator.Builder subBuilder = global::world.role.Creator.CreateBuilder();
              if (result.hasCreator) {
                subBuilder.MergeFrom(Creator);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Creator = subBuilder.BuildPartial();
              break;
            }
            case 18:
            case 16: {
              input.ReadInt32Array(tag, field_name, result.levelupExp_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.levelupGongde_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCreator {
       get { return result.hasCreator; }
      }
      public global::world.role.Creator Creator {
        get { return result.Creator; }
        set { SetCreator(value); }
      }
      public Builder SetCreator(global::world.role.Creator value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder SetCreator(global::world.role.Creator.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreator(global::world.role.Creator value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreator &&
            result.creator_ != global::world.role.Creator.DefaultInstance) {
            result.creator_ = global::world.role.Creator.CreateBuilder(result.creator_).MergeFrom(value).BuildPartial();
        } else {
          result.creator_ = value;
        }
        result.hasCreator = true;
        return this;
      }
      public Builder ClearCreator() {
        PrepareBuilder();
        result.hasCreator = false;
        result.creator_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> LevelupExpList {
        get { return PrepareBuilder().levelupExp_; }
      }
      public int LevelupExpCount {
        get { return result.LevelupExpCount; }
      }
      public int GetLevelupExp(int index) {
        return result.GetLevelupExp(index);
      }
      public Builder SetLevelupExp(int index, int value) {
        PrepareBuilder();
        result.levelupExp_[index] = value;
        return this;
      }
      public Builder AddLevelupExp(int value) {
        PrepareBuilder();
        result.levelupExp_.Add(value);
        return this;
      }
      public Builder AddRangeLevelupExp(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.levelupExp_.Add(values);
        return this;
      }
      public Builder ClearLevelupExp() {
        PrepareBuilder();
        result.levelupExp_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> LevelupGongdeList {
        get { return PrepareBuilder().levelupGongde_; }
      }
      public int LevelupGongdeCount {
        get { return result.LevelupGongdeCount; }
      }
      public int GetLevelupGongde(int index) {
        return result.GetLevelupGongde(index);
      }
      public Builder SetLevelupGongde(int index, int value) {
        PrepareBuilder();
        result.levelupGongde_[index] = value;
        return this;
      }
      public Builder AddLevelupGongde(int value) {
        PrepareBuilder();
        result.levelupGongde_.Add(value);
        return this;
      }
      public Builder AddRangeLevelupGongde(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.levelupGongde_.Add(values);
        return this;
      }
      public Builder ClearLevelupGongde() {
        PrepareBuilder();
        result.levelupGongde_.Clear();
        return this;
      }
    }
    static Tables() {
      object.ReferenceEquals(global::world.role.Role.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
